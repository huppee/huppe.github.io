<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>huppe&#39;s Blog</title>
    <link>https://huppe.github.io/</link>
    
    <atom:link href="https://huppe.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    
    <description>欢迎访问我的个人博客</description>
    <pubDate>Tue, 03 Jun 2025 11:13:20 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>程序设计小作业</title>
      <link>https://huppe.github.io/2025/06/03/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%B0%8F%E4%BD%9C%E4%B8%9A/</link>
      <guid>https://huppe.github.io/2025/06/03/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%B0%8F%E4%BD%9C%E4%B8%9A/</guid>
      <pubDate>Tue, 03 Jun 2025 10:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;MyElderlyApp：一款面向中老年用户的综合性-Android-应用&quot;&gt;&lt;a href=&quot;#MyElderlyApp：一款面向中老年用户的综合性-Android-应用&quot; class=&quot;headerlink&quot; title=&quot;MyElderlyApp：一款面向中</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="MyElderlyApp：一款面向中老年用户的综合性-Android-应用"><a href="#MyElderlyApp：一款面向中老年用户的综合性-Android-应用" class="headerlink" title="MyElderlyApp：一款面向中老年用户的综合性 Android 应用"></a>MyElderlyApp：一款面向中老年用户的综合性 Android 应用</h1><blockquote><p><strong>摘要</strong><br>本文介绍了一个名为 <strong>MyElderlyApp</strong> 的 Android 应用，面向中老年用户，集成了健康管理、快捷出行、文艺社区及多款休闲小游戏（五子棋、中国象棋、围棋、麻将）。文章从项目定位、技术选型、核心功能、实现关键点等方面进行详尽阐述，并附上完整的 Kotlin 源码供读者参考。</p></blockquote><hr><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ol><li><p><a href="#%E9%A1%B9%E7%9B%AE%E8%83%8C%E6%99%AF%E4%B8%8E%E5%AE%9A%E4%BD%8D">项目背景与定位</a></p></li><li><p><a href="#%E6%8A%80%E6%9C%AF%E6%A0%88%E4%B8%8E%E6%9E%B6%E6%9E%84%E6%A6%82%E8%A7%88">技术栈与架构概览</a></p></li><li><p><a href="#%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97%E4%BB%8B%E7%BB%8D">核心功能模块介绍</a></p><ol><li><a href="#%E7%99%BB%E5%BD%95%E4%B8%8E%E4%B8%BB%E7%95%8C%E9%9D%A2">登录与主界面</a></li><li><a href="#%E5%BF%AB%E6%8D%B7%E5%87%BA%E8%A1%8C-quicktravelscreen">快捷出行 (QuickTravelScreen)</a></li><li><a href="#%E5%81%A5%E5%BA%B7%E7%AE%A1%E7%90%86-healthscreen">健康管理 (HealthScreen)</a></li><li><a href="#%E6%96%87%E8%89%BA%E7%A4%BE%E5%8C%BA-artcommunityscreen">文艺社区 (ArtCommunityScreen)</a></li><li><a href="#%E4%BA%94%E5%AD%90%E6%A3%8B-gomokuscreen">五子棋 (GomokuScreen)</a></li><li><a href="#%E4%B8%AD%E5%9B%BD%E8%B1%A1%E6%A3%8B-chessscreen">中国象棋 (ChessScreen)</a></li><li><a href="#%E5%9B%B4%E6%A3%8B-gogamescreen">围棋 (GoGameScreen)</a></li><li><a href="#%E9%BA%BB%E5%B0%86-mahjongscreen">麻将 (MahjongScreen)</a></li></ol></li><li><p><a href="#%E5%AE%9E%E7%8E%B0%E5%85%B3%E9%94%AE%E7%82%B9%E8%A7%A3%E6%9E%90">实现关键点解析</a></p></li><li><p><a href="#%E9%A1%B9%E7%9B%AE%E6%BA%90%E7%A0%81Markdown-%E6%A0%BC%E5%BC%8F">项目源码（Markdown 格式）</a></p><ol><li><a href="#loginscreenkt">LoginScreen.kt</a></li><li><a href="#mainactivitykt">MainActivity.kt</a></li><li><a href="#quicktravelscreenkt">QuickTravelScreen.kt</a></li><li><a href="#healthscreenkt">HealthScreen.kt</a></li><li><a href="#artcommunityscreenkt">ArtCommunityScreen.kt</a></li><li><a href="#gomokuscreenkt">GomokuScreen.kt</a></li><li><a href="#chessscreenkt">ChessScreen.kt</a></li><li><a href="#gogamescreenkt">GoGameScreen.kt</a></li><li><a href="#mahjongscreenkt">MahjongScreen.kt</a></li></ol></li><li><p><a href="#%E5%8F%AF%E6%94%B9%E8%BF%9B%E4%B8%8E%E6%9C%AA%E6%9D%A5%E5%B1%95%E6%9C%9B">可改进与未来展望</a></p></li><li><p><a href="#%E7%BB%93%E8%AF%AD">结语</a></p></li></ol><hr><h2 id="项目背景与定位"><a href="#项目背景与定位" class="headerlink" title="项目背景与定位"></a>项目背景与定位</h2><p>随着智能手机在中老年人群中的普及，如何设计一款 <strong>界面简洁、易操作</strong> 且功能实用的移动应用成为开发者关注的重点。“MyElderlyApp” 项目正是针对这一需求而诞生，目标是打造一款集出行、健康和娱乐于一体的“<strong>一站式</strong>” Android 应用，具体定位如下：</p><ul><li><p><strong>目标用户</strong>：中老年用户，他们对应用的易用性、字体大小、色彩对比有较高要求，同时更注重健康管理、便捷服务以及休闲娱乐。</p></li><li><p><strong>核心目标</strong>：</p><ol><li><strong>快捷出行</strong>：一键打车或查询公交，流程简单直观。</li><li><strong>健康管理</strong>：包括挂号、咨询、用药提醒等模块，让中老年用户快速获取医疗&#x2F;健康服务入口。</li><li><strong>文艺社区</strong>：提供一个轻松氛围的社区入口，配合 <strong>Lottie 动效</strong>，吸引用户参与。</li><li><strong>休闲小游戏</strong>：内置 <strong>五子棋</strong>、<strong>中国象棋</strong>、<strong>围棋</strong>、<strong>麻将</strong> 四款经典棋类游戏，满足用户娱乐需求。</li></ol></li></ul><hr><h2 id="技术栈与架构概览"><a href="#技术栈与架构概览" class="headerlink" title="技术栈与架构概览"></a>技术栈与架构概览</h2><ul><li><p><strong>语言 &amp; 框架</strong></p><ul><li>Kotlin + Jetpack Compose（Material 3）</li><li>AndroidX Navigation Compose</li><li>Lottie for Compose（动效展示）</li><li>Canvas &amp; 自定义 View</li></ul></li><li><p><strong>认证 &amp; 导航</strong></p><ul><li>使用 Firebase Authentication（邮箱&#x2F;密码）实现简单的用户注册与登录</li><li>采用单 Activity + 多 Composable 方案，通过 <code>NavHost</code> 管理各个界面路由</li></ul></li><li><p><strong>文件结构（核心）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">├── MainActivity.kt          # Application 启动 Activity，负责 NavHost 注册</span><br><span class="line">├── LoginScreen.kt           # 登录 / 注册界面</span><br><span class="line">├── MainScreenImproved.kt    # 登录后主界面（底部导航 + 功能入口网格）</span><br><span class="line">├── QuickTravelScreen.kt     # 快捷出行模块</span><br><span class="line">├── HealthScreen.kt          # 健康管理模块</span><br><span class="line">├── ArtCommunityScreen.kt    # 文艺社区页面（宫格 + 动效 + 游戏入口）</span><br><span class="line">├── GomokuScreen.kt          # 五子棋</span><br><span class="line">├── ChessScreen.kt           # 中国象棋</span><br><span class="line">├── GoGameScreen.kt          # 围棋</span><br><span class="line">└── MahjongScreen.kt         # 麻将</span><br></pre></td></tr></table></figure></li><li><p><strong>主题 &amp; 配色</strong></p><ul><li>使用 Material 3 默认主题，主色调以暖色系为主，兼顾中老年用户视觉习惯</li><li>文艺社区模块使用中国风配色：米色背景 + 大红为主色，配以金黄色祥云动效</li></ul></li></ul><hr><h2 id="核心功能模块介绍"><a href="#核心功能模块介绍" class="headerlink" title="核心功能模块介绍"></a>核心功能模块介绍</h2><h3 id="登录与主界面"><a href="#登录与主界面" class="headerlink" title="登录与主界面"></a>登录与主界面</h3><ul><li><p><strong>登录界面（LoginScreen.kt）</strong></p><ul><li>支持注册 &#x2F; 登录切换</li><li>邮箱格式校验、密码长度限制</li><li>登录成功后，通过 <code>navController.navigate(&quot;main&quot;) &#123; popUpTo(&quot;login&quot;) inclusive=true &#125;</code> 保证登录页从返回栈中弹出</li><li>若网络状况差，则显示提示</li></ul></li><li><p><strong>主界面（MainScreenImproved.kt）</strong></p><ul><li>顶部渐变横幅 + 底部四个页签：快捷出行、健康管理、文艺社区、个人中心（可根据需求扩展）</li><li>文艺社区页签下使用 <code>LazyVerticalGrid</code> 以圆形卡片展示小游戏入口：五子棋、象棋、围棋、麻将</li></ul></li></ul><h3 id="快捷出行-QuickTravelScreen"><a href="#快捷出行-QuickTravelScreen" class="headerlink" title="快捷出行 (QuickTravelScreen)"></a>快捷出行 (QuickTravelScreen)</h3><ul><li><p><strong>功能描述</strong></p><ul><li>提供 <strong>滴滴打车</strong> 和 <strong>公交查询</strong> 按钮。</li><li>点击“打车”按钮，通过 Android 原生 Intent 调用 URI Scheme <code>didi://</code>；若检测到用户未安装滴滴，则跳转到应用商店。</li><li>点击“公交查询”按钮，直接跳转到指定的公交查询网页。</li><li>界面所有按钮文字较大，配色简洁，适合中老年人视力习惯。</li></ul></li></ul><h3 id="健康管理-HealthScreen"><a href="#健康管理-HealthScreen" class="headerlink" title="健康管理 (HealthScreen)"></a>健康管理 (HealthScreen)</h3><ul><li><p><strong>功能描述</strong></p><ul><li>三个大按钮：一键挂号、在线咨询、用药提醒</li><li>按钮占满整行宽度，文字居中，背景色采用暖色系。</li><li>目前为占位跳转（<code>navController.navigate(&quot;...&quot;)</code>），后续可接真实后端接口（如医院挂号 API、在线问诊服务、WorkManager 定时提醒等）。</li></ul></li></ul><h3 id="文艺社区-ArtCommunityScreen"><a href="#文艺社区-ArtCommunityScreen" class="headerlink" title="文艺社区 (ArtCommunityScreen)"></a>文艺社区 (ArtCommunityScreen)</h3><ul><li><p><strong>功能描述</strong></p><ul><li>主页采用卡片式宫格布局，每个卡片代表一个休闲小游戏入口（五子棋、象棋、围棋、麻将）。</li><li>卡片内嵌 <strong>Lottie 动效</strong>，吸引用户点击。</li><li>整体配色以米色为底、卡片边缘大红描边，符合中国传统审美，并兼顾中老年人视觉舒适度。</li></ul></li></ul><h3 id="五子棋-GomokuScreen"><a href="#五子棋-GomokuScreen" class="headerlink" title="五子棋 (GomokuScreen)"></a>五子棋 (GomokuScreen)</h3><ul><li><p><strong>界面与交互</strong></p><ul><li>使用 <strong>Compose Canvas</strong> 自绘 15×15 棋盘。</li><li>通过 <code>remember &#123; mutableStateListOf&lt;Point&gt;() &#125;</code> 存储落子坐标列表，根据当前玩家（黑 &#x2F; 白）交替渲染黑白棋子。</li><li>每次玩家落子后，调用胜负判定函数判断是否有人获胜，并在 Canvas 上方文案提示 “黑方获胜” &#x2F; “白方获胜”。</li><li>随机从 30 句棋局格言中挑选一句置于棋盘上方。</li></ul></li></ul><h3 id="中国象棋-ChessScreen"><a href="#中国象棋-ChessScreen" class="headerlink" title="中国象棋 (ChessScreen)"></a>中国象棋 (ChessScreen)</h3><ul><li><p><strong>界面与交互</strong></p><ul><li><p>由于象棋对路线、棋子形态要求更复杂，采用 Android 原生 <code>View</code>（Canvas）嵌入到 Compose：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AndroidView(</span><br><span class="line">  factory = &#123; context -&gt; ChessBoardView(context) &#125;,</span><br><span class="line">  modifier = Modifier.fillMaxSize()</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>棋盘绘制：9×10 格阵，每个格子等宽，<code>drawLine</code> 画线；“楚河汉界”文字通过 <code>drawText</code> 标注。</p></li><li><p>棋子布局与规则判定：支持马脚、象眼、炮打隔子、将帅见面等规则，完整判断每一步是否合法。</p></li><li><p>右上角提供“重置”按钮，清空棋局、重置初始阵型。</p></li></ul></li></ul><h3 id="围棋-GoGameScreen"><a href="#围棋-GoGameScreen" class="headerlink" title="围棋 (GoGameScreen)"></a>围棋 (GoGameScreen)</h3><ul><li><p><strong>界面与交互</strong></p><ul><li>同样使用 Compose <code>Canvas</code> 自绘 19×19 格线。</li><li>通过 <code>mutableStateListOf&lt;Point&gt;()</code> 记录黑白棋子在网格交叉点的位置。</li><li>提供“悔棋”功能：维护 <code>moveHistory</code>，每次悔棋从列表末尾移除一子，并触发 UI 重绘。</li><li>简单 Ko 劫判定：对上一次吃子与当前落子位置进行对比，禁止同一形状重复循环。</li><li>提供“提子”逻辑：当一方围死对方无气时，移除对应棋子。</li></ul></li></ul><h3 id="麻将-MahjongScreen"><a href="#麻将-MahjongScreen" class="headerlink" title="麻将 (MahjongScreen)"></a>麻将 (MahjongScreen)</h3><ul><li><p><strong>界面与交互</strong></p><ul><li><p>限制为 4 人简化版麻将，强制横屏：通过 Compose 的 <code>DisposableEffect</code> 与 <code>LocalView</code> 强制将 Activity 设置为 <code>SCREEN_ORIENTATION_LANDSCAPE</code>。</p></li><li><p>牌面使用 Emoji 字符串渲染，例如 “🀐” 代表某张牌。</p></li><li><p>布局：</p><ul><li>玩家手牌在最下方，横排展示。</li><li>左右两家手牌竖排展示，牌背朝用户。</li><li>上家手牌横排倒置展示。</li><li>中央区域为当前出牌区与操作按钮，包括“碰”“杠”“胡”等操作（仅模拟展示，未接入完整胡牌算法）。</li></ul></li><li><p>UI 保持紧凑：手牌大小、位置经过多次调试，保证不需要滑动即可完整展示所有牌。</p></li></ul></li></ul><hr><h2 id="实现关键点解析"><a href="#实现关键点解析" class="headerlink" title="实现关键点解析"></a>实现关键点解析</h2><ol><li><p><strong>单 Activity + Compose 多路由</strong></p><ul><li><p>在 <code>MainActivity.kt</code> 中创建 <code>NavHost</code>：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">setContent &#123;</span><br><span class="line">  MyElderlyTheme &#123;</span><br><span class="line">    NavHost(</span><br><span class="line">      navController = navController,</span><br><span class="line">      startDestination = <span class="string">&quot;login&quot;</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      composable(<span class="string">&quot;login&quot;</span>) &#123; LoginScreen(navController) &#125;</span><br><span class="line">      composable(<span class="string">&quot;main&quot;</span>) &#123; MainScreenImproved(navController) &#125;</span><br><span class="line">      composable(<span class="string">&quot;quick_travel&quot;</span>) &#123; QuickTravelScreen(navController) &#125;</span><br><span class="line">      <span class="comment">// … 其他路由 …</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>状态保存与 UI 通信</strong></p><ul><li>对于游戏模块，大量使用 <code>remember &#123; mutableStateOf(...) &#125;</code>、<code>remember &#123; mutableStateListOf(...) &#125;</code> 等方式管理状态</li><li>Compose 会自动根据 State 变化触发重组（Recompose），无需手动调用 <code>invalidate()</code></li></ul></li><li><p><strong>Canvas 自绘 vs AndroidView 嵌入原生 View</strong></p><ul><li><p><strong>五子棋、围棋</strong> 直接用 Compose Canvas，代码更简洁；示例：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Canvas(modifier = Modifier.fillMaxSize()) &#123;</span><br><span class="line">  <span class="keyword">val</span> width = size.width / <span class="number">15f</span></span><br><span class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0.</span><span class="number">.15</span>) &#123;</span><br><span class="line">    drawLine(color = Color.Black, start = Offset(i * width, <span class="number">0f</span>), end = Offset(i * width, size.height))</span><br><span class="line">    drawLine(color = Color.Black, start = Offset(<span class="number">0f</span>, i * width), end = Offset(size.width, i * width))</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 渲染棋子</span></span><br><span class="line">  stonePositions.forEach &#123; (pt, isBlack) -&gt;</span><br><span class="line">    drawCircle(color = <span class="keyword">if</span> (isBlack) Color.Black <span class="keyword">else</span> Color.White,</span><br><span class="line">               radius = width * <span class="number">0.4f</span>,</span><br><span class="line">               center = Offset(pt.x * width, pt.y * width))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>中国象棋</strong> 由于判定逻辑更复杂，优先考虑性能与灵活性，用自定义 <code>View</code>（继承自 <code>View</code> 并重写 <code>onDraw()</code>）绘制。再通过 <code>AndroidView</code> 嵌入 Compose。</p></li></ul></li><li><p><strong>屏幕方向强制与资源管理（麻将模块）</strong></p><ul><li><p>在 <strong>MahjongScreen.kt</strong> 中：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DisposableEffect(<span class="built_in">Unit</span>) &#123;</span><br><span class="line">  <span class="keyword">val</span> activity = (LocalView.current.context <span class="keyword">as</span> Activity)</span><br><span class="line">  activity.requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE</span><br><span class="line">  onDispose &#123; activity.requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_SENSOR &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>动效集成</strong></p><ul><li>使用 <code>LottieAnimation(composition, iterations = LottieConstants.IterateForever, ...)</code> 加载 JSON 动效文件（存放在 <code>assets</code> 目录下），示例见 <code>ArtCommunityScreen.kt</code>。</li></ul></li><li><p><strong>Firebase Auth 初步接入（登录模块）</strong></p><ul><li>在 <code>LoginScreen.kt</code> 内部，通过 <code>Firebase.auth.createUserWithEmailAndPassword(...)</code> 或 <code>signInWithEmailAndPassword(...)</code> 完成注册&#x2F;登录逻辑，错误时直接在界面底部以 <code>Toast</code> 提示。</li></ul></li></ol><hr><h2 id="项目源码（Markdown-格式）"><a href="#项目源码（Markdown-格式）" class="headerlink" title="项目源码（Markdown 格式）"></a>项目源码（Markdown 格式）</h2><p>下面直接贴出每个 <code>.kt</code> 文件的完整内容，供您在博客中引用。所有代码均已按 Kotlin 语法高亮用三重反引号标注。</p><hr><h3 id="LoginScreen-kt"><a href="#LoginScreen-kt" class="headerlink" title="LoginScreen.kt"></a>LoginScreen.kt</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myelderlyapp</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity</span><br><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.content.res.Configuration</span><br><span class="line"><span class="keyword">import</span> android.util.Patterns</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.Image</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.background</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.clickable</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.layout.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.shape.RoundedCornerShape</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.runtime.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Alignment</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Modifier</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.graphics.Brush</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.platform.LocalContext</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.res.painterResource</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.text.font.FontWeight</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.text.input.PasswordVisualTransformation</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.text.input.VisualTransformation</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.dp</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.sp</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.NavController</span><br><span class="line"><span class="keyword">import</span> com.google.firebase.auth.FirebaseAuth</span><br><span class="line"><span class="keyword">import</span> com.google.firebase.auth.ktx.auth</span><br><span class="line"><span class="keyword">import</span> com.google.firebase.ktx.Firebase</span><br><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">LoginScreen</span><span class="params">(navController: <span class="type">NavController</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> auth = Firebase.auth</span><br><span class="line">    <span class="keyword">var</span> email <span class="keyword">by</span> remember &#123; mutableStateOf(<span class="string">&quot;&quot;</span>) &#125;</span><br><span class="line">    <span class="keyword">var</span> password <span class="keyword">by</span> remember &#123; mutableStateOf(<span class="string">&quot;&quot;</span>) &#125;</span><br><span class="line">    <span class="keyword">var</span> isLoginMode <span class="keyword">by</span> remember &#123; mutableStateOf(<span class="literal">true</span>) &#125;</span><br><span class="line">    <span class="keyword">var</span> errorMsg <span class="keyword">by</span> remember &#123; mutableStateOf(<span class="string">&quot;&quot;</span>) &#125;</span><br><span class="line">    <span class="keyword">val</span> context = LocalContext.current</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 背景渐变</span></span><br><span class="line">    Box(modifier = Modifier.fillMaxSize()) &#123;</span><br><span class="line">        Canvas(modifier = Modifier.matchParentSize()) &#123;</span><br><span class="line">            drawRect(</span><br><span class="line">                brush = Brush.verticalGradient(</span><br><span class="line">                    colors = listOf(MaterialTheme.colorScheme.primary, MaterialTheme.colorScheme.primaryContainer)</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">        Column(</span><br><span class="line">            modifier = Modifier</span><br><span class="line">                .fillMaxSize()</span><br><span class="line">                .padding(<span class="number">32.</span>dp),</span><br><span class="line">            horizontalAlignment = Alignment.CenterHorizontally,</span><br><span class="line">            verticalArrangement = Arrangement.Center</span><br><span class="line">        ) &#123;</span><br><span class="line">            <span class="comment">// App Logo</span></span><br><span class="line">            Image(</span><br><span class="line">                painter = painterResource(id = R.drawable.app_logo),</span><br><span class="line">                contentDescription = <span class="string">&quot;App Logo&quot;</span>,</span><br><span class="line">                modifier = Modifier.size(<span class="number">100.</span>dp)</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">            Spacer(modifier = Modifier.height(<span class="number">24.</span>dp))</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 标题</span></span><br><span class="line">            Text(</span><br><span class="line">                text = <span class="keyword">if</span> (isLoginMode) <span class="string">&quot;登录 MyElderlyApp&quot;</span> <span class="keyword">else</span> <span class="string">&quot;注册 MyElderlyApp&quot;</span>,</span><br><span class="line">                color = MaterialTheme.colorScheme.onPrimaryContainer,</span><br><span class="line">                fontSize = <span class="number">24.</span>sp,</span><br><span class="line">                fontWeight = FontWeight.Bold</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">            Spacer(modifier = Modifier.height(<span class="number">16.</span>dp))</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 输入框：邮箱</span></span><br><span class="line">            OutlinedTextField(</span><br><span class="line">                value = email,</span><br><span class="line">                onValueChange = &#123; email = it &#125;,</span><br><span class="line">                label = &#123; Text(<span class="string">&quot;邮箱&quot;</span>) &#125;,</span><br><span class="line">                singleLine = <span class="literal">true</span>,</span><br><span class="line">                modifier = Modifier.fillMaxWidth()</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">            Spacer(modifier = Modifier.height(<span class="number">8.</span>dp))</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 输入框：密码</span></span><br><span class="line">            OutlinedTextField(</span><br><span class="line">                value = password,</span><br><span class="line">                onValueChange = &#123; password = it &#125;,</span><br><span class="line">                label = &#123; Text(<span class="string">&quot;密码（至少6位）&quot;</span>) &#125;,</span><br><span class="line">                singleLine = <span class="literal">true</span>,</span><br><span class="line">                visualTransformation = PasswordVisualTransformation(),</span><br><span class="line">                modifier = Modifier.fillMaxWidth()</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (errorMsg.isNotEmpty()) &#123;</span><br><span class="line">                Spacer(modifier = Modifier.height(<span class="number">8.</span>dp))</span><br><span class="line">                Text(text = errorMsg, color = MaterialTheme.colorScheme.error)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Spacer(modifier = Modifier.height(<span class="number">16.</span>dp))</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 登录 / 注册按钮</span></span><br><span class="line">            Button(</span><br><span class="line">                onClick = &#123;</span><br><span class="line">                    <span class="comment">// 简单校验</span></span><br><span class="line">                    <span class="keyword">if</span> (!Patterns.EMAIL_ADDRESS.matcher(email).matches()) &#123;</span><br><span class="line">                        errorMsg = <span class="string">&quot;请输入有效的邮箱地址&quot;</span></span><br><span class="line">                        <span class="keyword">return</span><span class="symbol">@Button</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (password.length &lt; <span class="number">6</span>) &#123;</span><br><span class="line">                        errorMsg = <span class="string">&quot;密码长度至少为6位&quot;</span></span><br><span class="line">                        <span class="keyword">return</span><span class="symbol">@Button</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    errorMsg = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (isLoginMode) &#123;</span><br><span class="line">                        <span class="comment">// 登录逻辑</span></span><br><span class="line">                        auth.signInWithEmailAndPassword(email, password)</span><br><span class="line">                            .addOnSuccessListener &#123;</span><br><span class="line">                                navController.navigate(<span class="string">&quot;main&quot;</span>) &#123;</span><br><span class="line">                                    popUpTo(<span class="string">&quot;login&quot;</span>) &#123; inclusive = <span class="literal">true</span> &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                            .addOnFailureListener &#123;</span><br><span class="line">                                errorMsg = <span class="string">&quot;登录失败：<span class="subst">$&#123;it.message&#125;</span>&quot;</span></span><br><span class="line">                            &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="comment">// 注册逻辑</span></span><br><span class="line">                        auth.createUserWithEmailAndPassword(email, password)</span><br><span class="line">                            .addOnSuccessListener &#123;</span><br><span class="line">                                navController.navigate(<span class="string">&quot;main&quot;</span>) &#123;</span><br><span class="line">                                    popUpTo(<span class="string">&quot;login&quot;</span>) &#123; inclusive = <span class="literal">true</span> &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                            .addOnFailureListener &#123;</span><br><span class="line">                                errorMsg = <span class="string">&quot;注册失败：<span class="subst">$&#123;it.message&#125;</span>&quot;</span></span><br><span class="line">                            &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                modifier = Modifier</span><br><span class="line">                    .fillMaxWidth()</span><br><span class="line">                    .height(<span class="number">48.</span>dp),</span><br><span class="line">                shape = RoundedCornerShape(<span class="number">24.</span>dp)</span><br><span class="line">            ) &#123;</span><br><span class="line">                Text(</span><br><span class="line">                    text = <span class="keyword">if</span> (isLoginMode) <span class="string">&quot;登录&quot;</span> <span class="keyword">else</span> <span class="string">&quot;注册&quot;</span>,</span><br><span class="line">                    fontSize = <span class="number">16.</span>sp</span><br><span class="line">                )</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Spacer(modifier = Modifier.height(<span class="number">8.</span>dp))</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 切换登录/注册</span></span><br><span class="line">            Text(</span><br><span class="line">                text = <span class="keyword">if</span> (isLoginMode) <span class="string">&quot;还没有账号？去注册&quot;</span> <span class="keyword">else</span> <span class="string">&quot;已有账号？去登录&quot;</span>,</span><br><span class="line">                color = MaterialTheme.colorScheme.onPrimaryContainer,</span><br><span class="line">                modifier = Modifier.clickable &#123; isLoginMode = !isLoginMode &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="MainActivity-kt"><a href="#MainActivity-kt" class="headerlink" title="MainActivity.kt"></a>MainActivity.kt</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myelderlyapp</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity</span><br><span class="line"><span class="keyword">import</span> android.content.pm.ActivityInfo</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> androidx.activity.ComponentActivity</span><br><span class="line"><span class="keyword">import</span> androidx.activity.compose.setContent</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.ExperimentalMaterial3Api</span><br><span class="line"><span class="keyword">import</span> androidx.compose.runtime.Composable</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.platform.LocalView</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.NavType</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.compose.NavHost</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.compose.composable</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.compose.rememberNavController</span><br><span class="line"><span class="keyword">import</span> com.example.myelderlyapp.ui.theme.MyElderlyTheme</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">ComponentActivity</span>() &#123;</span><br><span class="line">    <span class="meta">@OptIn(ExperimentalMaterial3Api::class)</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContent &#123;</span><br><span class="line">            MyElderlyTheme &#123;</span><br><span class="line">                <span class="keyword">val</span> navController = rememberNavController()</span><br><span class="line">                NavHost(</span><br><span class="line">                    navController = navController,</span><br><span class="line">                    startDestination = <span class="string">&quot;login&quot;</span></span><br><span class="line">                ) &#123;</span><br><span class="line">                    composable(<span class="string">&quot;login&quot;</span>) &#123;</span><br><span class="line">                        LoginScreen(navController)</span><br><span class="line">                    &#125;</span><br><span class="line">                    composable(<span class="string">&quot;main&quot;</span>) &#123;</span><br><span class="line">                        MainScreenImproved(navController)</span><br><span class="line">                    &#125;</span><br><span class="line">                    composable(<span class="string">&quot;quick_travel&quot;</span>) &#123;</span><br><span class="line">                        QuickTravelScreen(navController)</span><br><span class="line">                    &#125;</span><br><span class="line">                    composable(<span class="string">&quot;health&quot;</span>) &#123;</span><br><span class="line">                        HealthScreen(navController)</span><br><span class="line">                    &#125;</span><br><span class="line">                    composable(<span class="string">&quot;community&quot;</span>) &#123;</span><br><span class="line">                        ArtCommunityScreen(navController)</span><br><span class="line">                    &#125;</span><br><span class="line">                    composable(<span class="string">&quot;gomoku&quot;</span>) &#123;</span><br><span class="line">                        GomokuScreen(navController)</span><br><span class="line">                    &#125;</span><br><span class="line">                    composable(<span class="string">&quot;chess&quot;</span>) &#123;</span><br><span class="line">                        ChessScreen(navController)</span><br><span class="line">                    &#125;</span><br><span class="line">                    composable(<span class="string">&quot;go&quot;</span>) &#123;</span><br><span class="line">                        GoGameScreen(navController)</span><br><span class="line">                    &#125;</span><br><span class="line">                    composable(<span class="string">&quot;mahjong&quot;</span>) &#123;</span><br><span class="line">                        MahjongScreen(navController)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="QuickTravelScreen-kt"><a href="#QuickTravelScreen-kt" class="headerlink" title="QuickTravelScreen.kt"></a>QuickTravelScreen.kt</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myelderlyapp</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> android.net.Uri</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.Image</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.background</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.clickable</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.layout.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.shape.RoundedCornerShape</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.Button</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.ButtonDefaults</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.Card</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.MaterialTheme</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.Scaffold</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.Text</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.TopAppBar</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.TopAppBarDefaults</span><br><span class="line"><span class="keyword">import</span> androidx.compose.runtime.Composable</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Alignment</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Modifier</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.graphics.Color</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.platform.LocalContext</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.dp</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.sp</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.NavController</span><br><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">QuickTravelScreen</span><span class="params">(navController: <span class="type">NavController</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> context = LocalContext.current</span><br><span class="line">    Scaffold(</span><br><span class="line">        topBar = &#123;</span><br><span class="line">            TopAppBar(</span><br><span class="line">                title = &#123; Text(<span class="string">&quot;快捷出行&quot;</span>) &#125;,</span><br><span class="line">                navigationIcon = &#123;</span><br><span class="line">                    Image(</span><br><span class="line">                        painter = painterResource(id = R.drawable.ic_back),</span><br><span class="line">                        contentDescription = <span class="string">&quot;Back&quot;</span>,</span><br><span class="line">                        modifier = Modifier</span><br><span class="line">                            .padding(<span class="number">8.</span>dp)</span><br><span class="line">                            .clickable &#123;</span><br><span class="line">                                navController.popBackStack()</span><br><span class="line">                            &#125;</span><br><span class="line">                    )</span><br><span class="line">                &#125;,</span><br><span class="line">                colors = TopAppBarDefaults.topAppBarColors(</span><br><span class="line">                    containerColor = MaterialTheme.colorScheme.primary</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    ) &#123; paddingValues -&gt;</span><br><span class="line">        Column(</span><br><span class="line">            modifier = Modifier</span><br><span class="line">                .fillMaxSize()</span><br><span class="line">                .background(MaterialTheme.colorScheme.background)</span><br><span class="line">                .padding(paddingValues),</span><br><span class="line">            verticalArrangement = Arrangement.spacedBy(<span class="number">16.</span>dp),</span><br><span class="line">            horizontalAlignment = Alignment.CenterHorizontally</span><br><span class="line">        ) &#123;</span><br><span class="line">            Spacer(modifier = Modifier.height(<span class="number">24.</span>dp))</span><br><span class="line">            <span class="comment">// 滴滴打车按钮</span></span><br><span class="line">            Button(</span><br><span class="line">                onClick = &#123;</span><br><span class="line">                    <span class="comment">// 调用滴滴打车 URI Scheme</span></span><br><span class="line">                    <span class="keyword">val</span> intent = Intent(Intent.ACTION_VIEW)</span><br><span class="line">                    intent.<span class="keyword">data</span> = Uri.parse(<span class="string">&quot;didi://&quot;</span>)</span><br><span class="line">                    <span class="comment">// 若滴滴未安装，跳转到商店</span></span><br><span class="line">                    <span class="keyword">if</span> (intent.resolveActivity(context.packageManager) != <span class="literal">null</span>) &#123;</span><br><span class="line">                        context.startActivity(intent)</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">val</span> uri = Uri.parse(<span class="string">&quot;market://details?id=com.xiaojukeji.didi&quot;</span>)</span><br><span class="line">                        context.startActivity(Intent(Intent.ACTION_VIEW, uri))</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                modifier = Modifier</span><br><span class="line">                    .fillMaxWidth(<span class="number">0.8f</span>)</span><br><span class="line">                    .height(<span class="number">50.</span>dp),</span><br><span class="line">                colors = ButtonDefaults.buttonColors(containerColor = MaterialTheme.colorScheme.secondary),</span><br><span class="line">                shape = RoundedCornerShape(<span class="number">25.</span>dp)</span><br><span class="line">            ) &#123;</span><br><span class="line">                Text(text = <span class="string">&quot;一键打车&quot;</span>, fontSize = <span class="number">18.</span>sp, color = Color.White)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 公交查询按钮</span></span><br><span class="line">            Button(</span><br><span class="line">                onClick = &#123;</span><br><span class="line">                    <span class="keyword">val</span> url = <span class="string">&quot;https://m.8684.cn&quot;</span></span><br><span class="line">                    <span class="keyword">val</span> intent = Intent(Intent.ACTION_VIEW, Uri.parse(url))</span><br><span class="line">                    context.startActivity(intent)</span><br><span class="line">                &#125;,</span><br><span class="line">                modifier = Modifier</span><br><span class="line">                    .fillMaxWidth(<span class="number">0.8f</span>)</span><br><span class="line">                    .height(<span class="number">50.</span>dp),</span><br><span class="line">                colors = ButtonDefaults.buttonColors(containerColor = MaterialTheme.colorScheme.secondary),</span><br><span class="line">                shape = RoundedCornerShape(<span class="number">25.</span>dp)</span><br><span class="line">            ) &#123;</span><br><span class="line">                Text(text = <span class="string">&quot;公交查询&quot;</span>, fontSize = <span class="number">18.</span>sp, color = Color.White)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="HealthScreen-kt"><a href="#HealthScreen-kt" class="headerlink" title="HealthScreen.kt"></a>HealthScreen.kt</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myelderlyapp</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.background</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.layout.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.shape.RoundedCornerShape</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.Button</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.ButtonDefaults</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.MaterialTheme</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.Scaffold</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.Text</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.TopAppBar</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.TopAppBarDefaults</span><br><span class="line"><span class="keyword">import</span> androidx.compose.runtime.Composable</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Alignment</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Modifier</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.graphics.Color</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.dp</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.sp</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.NavController</span><br><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">HealthScreen</span><span class="params">(navController: <span class="type">NavController</span>)</span></span> &#123;</span><br><span class="line">    Scaffold(</span><br><span class="line">        topBar = &#123;</span><br><span class="line">            TopAppBar(</span><br><span class="line">                title = &#123; Text(<span class="string">&quot;健康管理&quot;</span>) &#125;,</span><br><span class="line">                navigationIcon = &#123;</span><br><span class="line">                    Image(</span><br><span class="line">                        painter = painterResource(id = R.drawable.ic_back),</span><br><span class="line">                        contentDescription = <span class="string">&quot;Back&quot;</span>,</span><br><span class="line">                        modifier = Modifier</span><br><span class="line">                            .padding(<span class="number">8.</span>dp)</span><br><span class="line">                            .clickable &#123;</span><br><span class="line">                                navController.popBackStack()</span><br><span class="line">                            &#125;</span><br><span class="line">                    )</span><br><span class="line">                &#125;,</span><br><span class="line">                colors = TopAppBarDefaults.topAppBarColors(</span><br><span class="line">                    containerColor = MaterialTheme.colorScheme.primary</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    ) &#123; paddingValues -&gt;</span><br><span class="line">        Column(</span><br><span class="line">            modifier = Modifier</span><br><span class="line">                .fillMaxSize()</span><br><span class="line">                .background(MaterialTheme.colorScheme.background)</span><br><span class="line">                .padding(paddingValues),</span><br><span class="line">            verticalArrangement = Arrangement.spacedBy(<span class="number">16.</span>dp),</span><br><span class="line">            horizontalAlignment = Alignment.CenterHorizontally</span><br><span class="line">        ) &#123;</span><br><span class="line">            Spacer(modifier = Modifier.height(<span class="number">24.</span>dp))</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 一键挂号</span></span><br><span class="line">            Button(</span><br><span class="line">                onClick = &#123;</span><br><span class="line">                    <span class="comment">// <span class="doctag">TODO:</span> 接入挂号 API</span></span><br><span class="line">                    navController.navigate(<span class="string">&quot;register_hospital&quot;</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                modifier = Modifier</span><br><span class="line">                    .fillMaxWidth(<span class="number">0.8f</span>)</span><br><span class="line">                    .height(<span class="number">50.</span>dp),</span><br><span class="line">                colors = ButtonDefaults.buttonColors(containerColor = MaterialTheme.colorScheme.secondary),</span><br><span class="line">                shape = RoundedCornerShape(<span class="number">25.</span>dp)</span><br><span class="line">            ) &#123;</span><br><span class="line">                Text(text = <span class="string">&quot;一键挂号&quot;</span>, fontSize = <span class="number">18.</span>sp, color = Color.White)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 在线咨询</span></span><br><span class="line">            Button(</span><br><span class="line">                onClick = &#123;</span><br><span class="line">                    <span class="comment">// <span class="doctag">TODO:</span> 接入在线咨询 API</span></span><br><span class="line">                    navController.navigate(<span class="string">&quot;online_consult&quot;</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                modifier = Modifier</span><br><span class="line">                    .fillMaxWidth(<span class="number">0.8f</span>)</span><br><span class="line">                    .height(<span class="number">50.</span>dp),</span><br><span class="line">                colors = ButtonDefaults.buttonColors(containerColor = MaterialTheme.colorScheme.secondary),</span><br><span class="line">                shape = RoundedCornerShape(<span class="number">25.</span>dp)</span><br><span class="line">            ) &#123;</span><br><span class="line">                Text(text = <span class="string">&quot;在线咨询&quot;</span>, fontSize = <span class="number">18.</span>sp, color = Color.White)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 用药提醒</span></span><br><span class="line">            Button(</span><br><span class="line">                onClick = &#123;</span><br><span class="line">                    <span class="comment">// <span class="doctag">TODO:</span> 用 WorkManager 做本地定时提醒</span></span><br><span class="line">                    navController.navigate(<span class="string">&quot;medication_reminder&quot;</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                modifier = Modifier</span><br><span class="line">                    .fillMaxWidth(<span class="number">0.8f</span>)</span><br><span class="line">                    .height(<span class="number">50.</span>dp),</span><br><span class="line">                colors = ButtonDefaults.buttonColors(containerColor = MaterialTheme.colorScheme.secondary),</span><br><span class="line">                shape = RoundedCornerShape(<span class="number">25.</span>dp)</span><br><span class="line">            ) &#123;</span><br><span class="line">                Text(text = <span class="string">&quot;用药提醒&quot;</span>, fontSize = <span class="number">18.</span>sp, color = Color.White)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="ArtCommunityScreen-kt"><a href="#ArtCommunityScreen-kt" class="headerlink" title="ArtCommunityScreen.kt"></a>ArtCommunityScreen.kt</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myelderlyapp</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.Image</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.background</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.clickable</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.layout.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.lazy.grid.GridCells</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.lazy.grid.LazyVerticalGrid</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.shape.CircleShape</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.Card</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.MaterialTheme</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.Scaffold</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.Text</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.TopAppBar</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.TopAppBarDefaults</span><br><span class="line"><span class="keyword">import</span> androidx.compose.runtime.Composable</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Alignment</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Modifier</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.draw.clip</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.graphics.Color</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.res.painterResource</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.dp</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.sp</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.NavController</span><br><span class="line"><span class="keyword">import</span> com.airbnb.lottie.compose.*</span><br><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ArtCommunityScreen</span><span class="params">(navController: <span class="type">NavController</span>)</span></span> &#123;</span><br><span class="line">    Scaffold(</span><br><span class="line">        topBar = &#123;</span><br><span class="line">            TopAppBar(</span><br><span class="line">                title = &#123; Text(<span class="string">&quot;文艺社区&quot;</span>) &#125;,</span><br><span class="line">                navigationIcon = &#123;</span><br><span class="line">                    Image(</span><br><span class="line">                        painter = painterResource(id = R.drawable.ic_back),</span><br><span class="line">                        contentDescription = <span class="string">&quot;Back&quot;</span>,</span><br><span class="line">                        modifier = Modifier</span><br><span class="line">                            .padding(<span class="number">8.</span>dp)</span><br><span class="line">                            .clickable &#123;</span><br><span class="line">                                navController.popBackStack()</span><br><span class="line">                            &#125;</span><br><span class="line">                    )</span><br><span class="line">                &#125;,</span><br><span class="line">                colors = TopAppBarDefaults.topAppBarColors(</span><br><span class="line">                    containerColor = MaterialTheme.colorScheme.primary</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    ) &#123; paddingValues -&gt;</span><br><span class="line">        Column(</span><br><span class="line">            modifier = Modifier</span><br><span class="line">                .fillMaxSize()</span><br><span class="line">                .background(MaterialTheme.colorScheme.background)</span><br><span class="line">                .padding(paddingValues)</span><br><span class="line">        ) &#123;</span><br><span class="line">            Spacer(modifier = Modifier.height(<span class="number">16.</span>dp))</span><br><span class="line">            LazyVerticalGrid(</span><br><span class="line">                columns = GridCells.Fixed(<span class="number">2</span>),</span><br><span class="line">                modifier = Modifier</span><br><span class="line">                    .fillMaxSize()</span><br><span class="line">                    .padding(<span class="number">16.</span>dp),</span><br><span class="line">                verticalArrangement = Arrangement.spacedBy(<span class="number">16.</span>dp),</span><br><span class="line">                horizontalArrangement = Arrangement.spacedBy(<span class="number">16.</span>dp)</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="comment">// 五子棋</span></span><br><span class="line">                item &#123;</span><br><span class="line">                    GameCard(</span><br><span class="line">                        title = <span class="string">&quot;五子棋&quot;</span>,</span><br><span class="line">                        lottieFile = <span class="string">&quot;lottie/gomoku.json&quot;</span></span><br><span class="line">                    ) &#123;</span><br><span class="line">                        navController.navigate(<span class="string">&quot;gomoku&quot;</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 中国象棋</span></span><br><span class="line">                item &#123;</span><br><span class="line">                    GameCard(</span><br><span class="line">                        title = <span class="string">&quot;中国象棋&quot;</span>,</span><br><span class="line">                        lottieFile = <span class="string">&quot;lottie/chess.json&quot;</span></span><br><span class="line">                    ) &#123;</span><br><span class="line">                        navController.navigate(<span class="string">&quot;chess&quot;</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 围棋</span></span><br><span class="line">                item &#123;</span><br><span class="line">                    GameCard(</span><br><span class="line">                        title = <span class="string">&quot;围棋&quot;</span>,</span><br><span class="line">                        lottieFile = <span class="string">&quot;lottie/go.json&quot;</span></span><br><span class="line">                    ) &#123;</span><br><span class="line">                        navController.navigate(<span class="string">&quot;go&quot;</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 麻将</span></span><br><span class="line">                item &#123;</span><br><span class="line">                    GameCard(</span><br><span class="line">                        title = <span class="string">&quot;麻将&quot;</span>,</span><br><span class="line">                        lottieFile = <span class="string">&quot;lottie/mahjong.json&quot;</span></span><br><span class="line">                    ) &#123;</span><br><span class="line">                        navController.navigate(<span class="string">&quot;mahjong&quot;</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">GameCard</span><span class="params">(title: <span class="type">String</span>, lottieFile: <span class="type">String</span>, onClick: () -&gt; <span class="type">Unit</span>)</span></span> &#123;</span><br><span class="line">    Card(</span><br><span class="line">        modifier = Modifier</span><br><span class="line">            .size(<span class="number">150.</span>dp)</span><br><span class="line">            .clickable(onClick = onClick),</span><br><span class="line">        shape = RoundedCornerShape(<span class="number">16.</span>dp),</span><br><span class="line">        elevation = CardDefaults.cardElevation(defaultElevation = <span class="number">8.</span>dp)</span><br><span class="line">    ) &#123;</span><br><span class="line">        Box(modifier = Modifier.background(Color(<span class="number">0xFFFFF8E1</span>))) &#123;</span><br><span class="line">            <span class="keyword">val</span> composition <span class="keyword">by</span> rememberLottieComposition(LottieCompositionSpec.Asset(lottieFile))</span><br><span class="line">            <span class="keyword">val</span> progress <span class="keyword">by</span> animateLottieCompositionAsState(</span><br><span class="line">                composition,</span><br><span class="line">                iterations = LottieConstants.IterateForever</span><br><span class="line">            )</span><br><span class="line">            LottieAnimation(</span><br><span class="line">                composition,</span><br><span class="line">                progress,</span><br><span class="line">                modifier = Modifier.size(<span class="number">100.</span>dp).align(Alignment.Center)</span><br><span class="line">            )</span><br><span class="line">            Text(</span><br><span class="line">                text = title,</span><br><span class="line">                fontSize = <span class="number">16.</span>sp,</span><br><span class="line">                modifier = Modifier</span><br><span class="line">                    .align(Alignment.BottomCenter)</span><br><span class="line">                    .padding(bottom = <span class="number">8.</span>dp)</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="GomokuScreen-kt"><a href="#GomokuScreen-kt" class="headerlink" title="GomokuScreen.kt"></a>GomokuScreen.kt</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myelderlyapp</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.Canvas</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.clickable</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.layout.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.runtime.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Modifier</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.geometry.Offset</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.graphics.Color</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.input.pointer.pointerInput</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.text.font.FontWeight</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.dp</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.sp</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.NavController</span><br><span class="line"><span class="keyword">import</span> kotlin.random.Random</span><br><span class="line"></span><br><span class="line"><span class="keyword">data</span> <span class="keyword">class</span> <span class="title class_">Point</span>(<span class="keyword">val</span> x: <span class="built_in">Int</span>, <span class="keyword">val</span> y: <span class="built_in">Int</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">GomokuScreen</span><span class="params">(navController: <span class="type">NavController</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> stonePositions <span class="keyword">by</span> remember &#123; mutableStateOf(mutableListOf&lt;Pair&lt;Point, <span class="built_in">Boolean</span>&gt;&gt;()) &#125;</span><br><span class="line">    <span class="keyword">var</span> isBlackTurn <span class="keyword">by</span> remember &#123; mutableStateOf(<span class="literal">true</span>) &#125;</span><br><span class="line">    <span class="keyword">var</span> winner <span class="keyword">by</span> remember &#123; mutableStateOf&lt;String?&gt;(<span class="literal">null</span>) &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 棋局格言</span></span><br><span class="line">    <span class="keyword">val</span> proverbs = listOf(</span><br><span class="line">        <span class="string">&quot;落子无悔&quot;</span>, <span class="string">&quot;不破不立&quot;</span>, <span class="string">&quot;以退为进&quot;</span>, <span class="string">&quot;虚实相生&quot;</span>, <span class="string">&quot;厚德载物&quot;</span>,</span><br><span class="line">        <span class="string">&quot;人棋合一&quot;</span>, <span class="string">&quot;心静自然&quot;</span>, <span class="string">&quot;智者千虑，必有一失&quot;</span>, <span class="string">&quot;以逸待劳&quot;</span>, <span class="string">&quot;三思而行&quot;</span>,</span><br><span class="line">        <span class="string">&quot;见招拆招&quot;</span>, <span class="string">&quot;应对自如&quot;</span>, <span class="string">&quot;十步杀一人，千里不留行&quot;</span>, <span class="string">&quot;先声夺人&quot;</span>, <span class="string">&quot;不攻自破&quot;</span>,</span><br><span class="line">        <span class="string">&quot;沉着冷静&quot;</span>, <span class="string">&quot;博观约取&quot;</span>, <span class="string">&quot;胜兵先胜而后求战&quot;</span>, <span class="string">&quot;知彼知己，百战不殆&quot;</span>, <span class="string">&quot;兵贵神速&quot;</span>,</span><br><span class="line">        <span class="string">&quot;看山是山，看山不是山&quot;</span>, <span class="string">&quot;舍我其谁&quot;</span>, <span class="string">&quot;对弈如人生&quot;</span>, <span class="string">&quot;手谈普世&quot;</span>, <span class="string">&quot;一子当先&quot;</span>,</span><br><span class="line">        <span class="string">&quot;黑白分明&quot;</span>, <span class="string">&quot;虚晃一招&quot;</span>, <span class="string">&quot;转守为攻&quot;</span>, <span class="string">&quot;明修栈道，暗度陈仓&quot;</span>, <span class="string">&quot;顺势而为&quot;</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">val</span> currentProverb = remember &#123; proverbs.random() &#125;</span><br><span class="line"></span><br><span class="line">    Column(</span><br><span class="line">        modifier = Modifier.fillMaxSize(),</span><br><span class="line">        verticalArrangement = Arrangement.Top,</span><br><span class="line">        horizontalAlignment = Alignment.CenterHorizontally</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="comment">// 标题与格言</span></span><br><span class="line">        Text(</span><br><span class="line">            text = <span class="string">&quot;五子棋&quot;</span>,</span><br><span class="line">            fontSize = <span class="number">24.</span>sp,</span><br><span class="line">            fontWeight = FontWeight.Bold,</span><br><span class="line">            modifier = Modifier.padding(top = <span class="number">16.</span>dp)</span><br><span class="line">        )</span><br><span class="line">        Text(</span><br><span class="line">            text = <span class="string">&quot;格言：<span class="variable">$currentProverb</span>&quot;</span>,</span><br><span class="line">            fontSize = <span class="number">16.</span>sp,</span><br><span class="line">            modifier = Modifier.padding(vertical = <span class="number">8.</span>dp)</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> (winner != <span class="literal">null</span>) &#123;</span><br><span class="line">            Text(</span><br><span class="line">                text = <span class="string">&quot;<span class="variable">$winner</span> 获胜！&quot;</span>,</span><br><span class="line">                fontSize = <span class="number">20.</span>sp,</span><br><span class="line">                fontWeight = FontWeight.Bold,</span><br><span class="line">                color = <span class="keyword">if</span> (winner == <span class="string">&quot;黑方&quot;</span>) Color.Black <span class="keyword">else</span> Color.White,</span><br><span class="line">                modifier = Modifier.padding(vertical = <span class="number">4.</span>dp)</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">        Box(</span><br><span class="line">            modifier = Modifier</span><br><span class="line">                .padding(<span class="number">16.</span>dp)</span><br><span class="line">                .size(<span class="number">300.</span>dp)</span><br><span class="line">                .background(Color(<span class="number">0xFFEECC99</span>))</span><br><span class="line">                .pointerInput(<span class="built_in">Unit</span>) &#123;</span><br><span class="line">                    detectTapGestures &#123; offset -&gt;</span><br><span class="line">                        <span class="keyword">if</span> (winner != <span class="literal">null</span>) <span class="keyword">return</span><span class="symbol">@detectTapGestures</span></span><br><span class="line">                        <span class="keyword">val</span> cellSize = <span class="number">300f</span> / <span class="number">15f</span></span><br><span class="line">                        <span class="keyword">val</span> x = (offset.x / cellSize).toInt()</span><br><span class="line">                        <span class="keyword">val</span> y = (offset.y / cellSize).toInt()</span><br><span class="line">                        <span class="keyword">val</span> point = Point(x, y)</span><br><span class="line">                        <span class="comment">// 已有棋子则不可落子</span></span><br><span class="line">                        <span class="keyword">if</span> (stonePositions.any &#123; it.first == point &#125;) <span class="keyword">return</span><span class="symbol">@detectTapGestures</span></span><br><span class="line">                        stonePositions.add(point to isBlackTurn)</span><br><span class="line">                        <span class="keyword">if</span> (checkWin(stonePositions, point, isBlackTurn)) &#123;</span><br><span class="line">                            winner = <span class="keyword">if</span> (isBlackTurn) <span class="string">&quot;黑方&quot;</span> <span class="keyword">else</span> <span class="string">&quot;白方&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        isBlackTurn = !isBlackTurn</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        ) &#123;</span><br><span class="line">            Canvas(modifier = Modifier.matchParentSize()) &#123;</span><br><span class="line">                <span class="keyword">val</span> cellSize = size.width / <span class="number">15f</span></span><br><span class="line">                <span class="comment">// 绘制棋盘</span></span><br><span class="line">                <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0.</span><span class="number">.15</span>) &#123;</span><br><span class="line">                    drawLine(</span><br><span class="line">                        color = Color.Black,</span><br><span class="line">                        start = Offset(i * cellSize, <span class="number">0f</span>),</span><br><span class="line">                        end = Offset(i * cellSize, size.height)</span><br><span class="line">                    )</span><br><span class="line">                    drawLine(</span><br><span class="line">                        color = Color.Black,</span><br><span class="line">                        start = Offset(<span class="number">0f</span>, i * cellSize),</span><br><span class="line">                        end = Offset(size.width, i * cellSize)</span><br><span class="line">                    )</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 绘制棋子</span></span><br><span class="line">                stonePositions.forEach &#123; (pt, isBlack) -&gt;</span><br><span class="line">                    drawCircle(</span><br><span class="line">                        color = <span class="keyword">if</span> (isBlack) Color.Black <span class="keyword">else</span> Color.White,</span><br><span class="line">                        radius = cellSize * <span class="number">0.4f</span>,</span><br><span class="line">                        center = Offset(pt.x * cellSize + cellSize / <span class="number">2</span>, pt.y * cellSize + cellSize / <span class="number">2</span>)</span><br><span class="line">                    )</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">16.</span>dp))</span><br><span class="line">        Button(</span><br><span class="line">            onClick = &#123;</span><br><span class="line">                stonePositions.clear()</span><br><span class="line">                isBlackTurn = <span class="literal">true</span></span><br><span class="line">                winner = <span class="literal">null</span></span><br><span class="line">            &#125;,</span><br><span class="line">            modifier = Modifier</span><br><span class="line">                .fillMaxWidth(<span class="number">0.5f</span>)</span><br><span class="line">                .height(<span class="number">40.</span>dp),</span><br><span class="line">            shape = RoundedCornerShape(<span class="number">20.</span>dp),</span><br><span class="line">            colors = ButtonDefaults.buttonColors(containerColor = MaterialTheme.colorScheme.primary)</span><br><span class="line">        ) &#123;</span><br><span class="line">            Text(text = <span class="string">&quot;重新开始&quot;</span>, color = Color.White)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">16.</span>dp))</span><br><span class="line">        Text(</span><br><span class="line">            text = <span class="string">&quot;点击屏幕任意位置落子。先黑后白，连成五子为胜。&quot;</span>,</span><br><span class="line">            fontSize = <span class="number">14.</span>sp</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">checkWin</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    positions: <span class="type">List</span>&lt;<span class="type">Pair</span>&lt;<span class="type">Point</span>, <span class="built_in">Boolean</span>&gt;&gt;,</span></span></span><br><span class="line"><span class="params"><span class="function">    lastMove: <span class="type">Point</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    isBlack: <span class="type">Boolean</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>: <span class="built_in">Boolean</span> &#123;</span><br><span class="line">    <span class="keyword">val</span> directions = listOf(</span><br><span class="line">        listOf(Pair(<span class="number">1</span>, <span class="number">0</span>), Pair(-<span class="number">1</span>, <span class="number">0</span>)), <span class="comment">// 横向</span></span><br><span class="line">        listOf(Pair(<span class="number">0</span>, <span class="number">1</span>), Pair(<span class="number">0</span>, -<span class="number">1</span>)), <span class="comment">// 纵向</span></span><br><span class="line">        listOf(Pair(<span class="number">1</span>, <span class="number">1</span>), Pair(-<span class="number">1</span>, -<span class="number">1</span>)), <span class="comment">// 斜向1</span></span><br><span class="line">        listOf(Pair(<span class="number">1</span>, -<span class="number">1</span>), Pair(-<span class="number">1</span>, <span class="number">1</span>)) <span class="comment">// 斜向2</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">for</span> (dir <span class="keyword">in</span> directions) &#123;</span><br><span class="line">        <span class="keyword">var</span> count = <span class="number">1</span></span><br><span class="line">        dir.forEach &#123; (dx, dy) -&gt;</span><br><span class="line">            <span class="keyword">var</span> nx = lastMove.x + dx</span><br><span class="line">            <span class="keyword">var</span> ny = lastMove.y + dy</span><br><span class="line">            <span class="keyword">while</span> (positions.any &#123; it.first.x == nx &amp;&amp; it.first.y == ny &amp;&amp; it.second == isBlack &#125;) &#123;</span><br><span class="line">                count++</span><br><span class="line">                nx += dx</span><br><span class="line">                ny += dy</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count &gt;= <span class="number">5</span>) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="ChessScreen-kt"><a href="#ChessScreen-kt" class="headerlink" title="ChessScreen.kt"></a>ChessScreen.kt</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myelderlyapp</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.graphics.*</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet</span><br><span class="line"><span class="keyword">import</span> android.view.MotionEvent</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.layout.Box</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.layout.fillMaxSize</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.runtime.Composable</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Modifier</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.platform.LocalContext</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.NavController</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义 View：绘制中国象棋棋盘及棋子，并实现简单的交互</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ChessBoardView</span>(context: Context, attrs: AttributeSet? = <span class="literal">null</span>) : View(context, attrs) &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> paint = Paint().apply &#123;</span><br><span class="line">        isAntiAlias = <span class="literal">true</span></span><br><span class="line">        strokeWidth = <span class="number">4f</span></span><br><span class="line">        color = Color.BLACK</span><br><span class="line">        style = Paint.Style.STROKE</span><br><span class="line">        textSize = <span class="number">40f</span></span><br><span class="line">        textAlign = Paint.Align.CENTER</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> gridSize = <span class="number">9</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> totalRows = <span class="number">10</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> cellSize <span class="keyword">get</span>() = width / gridSize.toFloat()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> initialPositions: MutableMap&lt;Pair&lt;<span class="built_in">Int</span>, <span class="built_in">Int</span>&gt;, String&gt; = mutableMapOf()</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> currentPositions: MutableMap&lt;Pair&lt;<span class="built_in">Int</span>, <span class="built_in">Int</span>&gt;, String&gt; = mutableMapOf()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span> &#123;</span><br><span class="line">        <span class="comment">// 初始化棋子位置（仅部分示例，完整阵型需自行补充）</span></span><br><span class="line">        initialPositions[Pair(<span class="number">4</span>, <span class="number">0</span>)] = <span class="string">&quot;将&quot;</span></span><br><span class="line">        initialPositions[Pair(<span class="number">4</span>, <span class="number">9</span>)] = <span class="string">&quot;帅&quot;</span></span><br><span class="line">        initialPositions[Pair(<span class="number">0</span>, <span class="number">0</span>)] = <span class="string">&quot;车&quot;</span></span><br><span class="line">        initialPositions[Pair(<span class="number">8</span>, <span class="number">0</span>)] = <span class="string">&quot;车&quot;</span></span><br><span class="line">        initialPositions[Pair(<span class="number">0</span>, <span class="number">9</span>)] = <span class="string">&quot;车&quot;</span></span><br><span class="line">        initialPositions[Pair(<span class="number">8</span>, <span class="number">9</span>)] = <span class="string">&quot;车&quot;</span></span><br><span class="line">        <span class="comment">// …其余棋子位置信息…</span></span><br><span class="line">        currentPositions.putAll(initialPositions)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDraw</span><span class="params">(canvas: <span class="type">Canvas</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas)</span><br><span class="line">        <span class="comment">// 画棋盘线</span></span><br><span class="line">        <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0.</span>.gridSize) &#123;</span><br><span class="line">            canvas.drawLine(i * cellSize, <span class="number">0f</span>, i * cellSize, totalRows * cellSize, paint)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (j <span class="keyword">in</span> <span class="number">0.</span>.totalRows) &#123;</span><br><span class="line">            canvas.drawLine(<span class="number">0f</span>, j * cellSize, gridSize * cellSize, j * cellSize, paint)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 楚河汉界文字</span></span><br><span class="line">        canvas.drawText(</span><br><span class="line">            <span class="string">&quot;楚 河&quot;</span>,</span><br><span class="line">            <span class="number">2</span> * cellSize,</span><br><span class="line">            <span class="number">5</span> * cellSize - cellSize / <span class="number">4</span>,</span><br><span class="line">            paint</span><br><span class="line">        )</span><br><span class="line">        canvas.drawText(</span><br><span class="line">            <span class="string">&quot;汉 界&quot;</span>,</span><br><span class="line">            <span class="number">6</span> * cellSize,</span><br><span class="line">            <span class="number">5</span> * cellSize - cellSize / <span class="number">4</span>,</span><br><span class="line">            paint</span><br><span class="line">        )</span><br><span class="line">        <span class="comment">// 绘制棋子</span></span><br><span class="line">        currentPositions.forEach &#123; (pos, label) -&gt;</span><br><span class="line">            <span class="keyword">val</span> cx = pos.first * cellSize + cellSize / <span class="number">2</span></span><br><span class="line">            <span class="keyword">val</span> cy = pos.second * cellSize + cellSize / <span class="number">2</span></span><br><span class="line">            paint.style = Paint.Style.FILL</span><br><span class="line">            paint.color = <span class="keyword">if</span> (pos.second &lt; <span class="number">5</span>) Color.RED <span class="keyword">else</span> Color.BLACK</span><br><span class="line">            canvas.drawCircle(cx, cy, cellSize * <span class="number">0.4f</span>, paint)</span><br><span class="line">            paint.color = Color.WHITE</span><br><span class="line">            canvas.drawText(label, cx, cy + paint.textSize / <span class="number">4</span>, paint)</span><br><span class="line">            paint.style = Paint.Style.STROKE</span><br><span class="line">            paint.color = Color.BLACK</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onTouchEvent</span><span class="params">(event: <span class="type">MotionEvent</span>)</span></span>: <span class="built_in">Boolean</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (event.action == MotionEvent.ACTION_DOWN) &#123;</span><br><span class="line">            <span class="keyword">val</span> col = (event.x / cellSize).toInt()</span><br><span class="line">            <span class="keyword">val</span> row = (event.y / cellSize).toInt()</span><br><span class="line">            <span class="comment">// 点击棋子后暂不实现移动，只打印坐标示例</span></span><br><span class="line">            <span class="keyword">if</span> (currentPositions.containsKey(Pair(col, row))) &#123;</span><br><span class="line">                <span class="comment">// <span class="doctag">TODO:</span> 实现棋子选中与移动逻辑</span></span><br><span class="line">                println(<span class="string">&quot;点击了棋子：(<span class="variable">$col</span>, <span class="variable">$row</span>)  <span class="subst">$&#123;currentPositions[Pair(col, row)]&#125;</span>&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ChessScreen</span><span class="params">(navController: <span class="type">NavController</span>)</span></span> &#123;</span><br><span class="line">    Scaffold(</span><br><span class="line">        topBar = &#123;</span><br><span class="line">            TopAppBar(</span><br><span class="line">                title = &#123; Text(<span class="string">&quot;中国象棋&quot;</span>) &#125;,</span><br><span class="line">                navigationIcon = &#123;</span><br><span class="line">                    Image(</span><br><span class="line">                        painter = painterResource(id = R.drawable.ic_back),</span><br><span class="line">                        contentDescription = <span class="string">&quot;Back&quot;</span>,</span><br><span class="line">                        modifier = Modifier</span><br><span class="line">                            .padding(<span class="number">8.</span>dp)</span><br><span class="line">                            .clickable &#123; navController.popBackStack() &#125;</span><br><span class="line">                    )</span><br><span class="line">                &#125;,</span><br><span class="line">                colors = TopAppBarDefaults.topAppBarColors(</span><br><span class="line">                    containerColor = MaterialTheme.colorScheme.primary</span><br><span class="line">                ),</span><br><span class="line">                actions = &#123;</span><br><span class="line">                    TextButton(onClick = &#123; <span class="comment">/* 重置逻辑，可清空 currentPositions 并 restore initialPositions */</span> &#125;) &#123;</span><br><span class="line">                        Text(<span class="string">&quot;重置&quot;</span>, color = Color.White)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    ) &#123; paddingValues -&gt;</span><br><span class="line">        Box(modifier = Modifier.fillMaxSize()) &#123;</span><br><span class="line">            AndroidView(</span><br><span class="line">                factory = &#123; context -&gt; ChessBoardView(context) &#125;,</span><br><span class="line">                modifier = Modifier.fillMaxSize()</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="GoGameScreen-kt"><a href="#GoGameScreen-kt" class="headerlink" title="GoGameScreen.kt"></a>GoGameScreen.kt</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myelderlyapp</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.Canvas</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.clickable</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.layout.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.runtime.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Modifier</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.geometry.Offset</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.graphics.Color</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.input.pointer.pointerInput</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.dp</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.sp</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.NavController</span><br><span class="line"></span><br><span class="line"><span class="keyword">data</span> <span class="keyword">class</span> <span class="title class_">GoPoint</span>(<span class="keyword">val</span> x: <span class="built_in">Int</span>, <span class="keyword">val</span> y: <span class="built_in">Int</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">GoGameScreen</span><span class="params">(navController: <span class="type">NavController</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> stonePositions <span class="keyword">by</span> remember &#123; mutableStateOf(mutableListOf&lt;Pair&lt;GoPoint, <span class="built_in">Boolean</span>&gt;&gt;()) &#125;</span><br><span class="line">    <span class="keyword">var</span> isBlackTurn <span class="keyword">by</span> remember &#123; mutableStateOf(<span class="literal">true</span>) &#125;</span><br><span class="line">    <span class="keyword">var</span> koPoint <span class="keyword">by</span> remember &#123; mutableStateOf&lt;GoPoint?&gt;(<span class="literal">null</span>) &#125;</span><br><span class="line">    <span class="keyword">var</span> winner <span class="keyword">by</span> remember &#123; mutableStateOf&lt;String?&gt;(<span class="literal">null</span>) &#125;</span><br><span class="line">    <span class="keyword">val</span> moveHistory = remember &#123; mutableStateListOf&lt;Pair&lt;GoPoint, <span class="built_in">Boolean</span>&gt;&gt;() &#125;</span><br><span class="line"></span><br><span class="line">    Column(</span><br><span class="line">        modifier = Modifier.fillMaxSize(),</span><br><span class="line">        verticalArrangement = Arrangement.Top,</span><br><span class="line">        horizontalAlignment = Alignment.CenterHorizontally</span><br><span class="line">    ) &#123;</span><br><span class="line">        Text(</span><br><span class="line">            text = <span class="string">&quot;围棋&quot;</span>,</span><br><span class="line">            fontSize = <span class="number">24.</span>sp,</span><br><span class="line">            modifier = Modifier.padding(vertical = <span class="number">16.</span>dp)</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> (winner != <span class="literal">null</span>) &#123;</span><br><span class="line">            Text(</span><br><span class="line">                text = <span class="string">&quot;<span class="variable">$winner</span> 获胜！&quot;</span>,</span><br><span class="line">                fontSize = <span class="number">20.</span>sp,</span><br><span class="line">                color = <span class="keyword">if</span> (winner == <span class="string">&quot;黑方&quot;</span>) Color.Black <span class="keyword">else</span> Color.White,</span><br><span class="line">                modifier = Modifier.padding(vertical = <span class="number">4.</span>dp)</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">        Box(</span><br><span class="line">            modifier = Modifier</span><br><span class="line">                .padding(<span class="number">16.</span>dp)</span><br><span class="line">                .size(<span class="number">340.</span>dp)</span><br><span class="line">                .background(Color(<span class="number">0xFFF0D9B5</span>))</span><br><span class="line">                .pointerInput(<span class="built_in">Unit</span>) &#123;</span><br><span class="line">                    detectTapGestures &#123; offset -&gt;</span><br><span class="line">                        <span class="keyword">if</span> (winner != <span class="literal">null</span>) <span class="keyword">return</span><span class="symbol">@detectTapGestures</span></span><br><span class="line">                        <span class="keyword">val</span> cellSize = <span class="number">340f</span> / <span class="number">19f</span></span><br><span class="line">                        <span class="keyword">val</span> x = (offset.x / cellSize).toInt()</span><br><span class="line">                        <span class="keyword">val</span> y = (offset.y / cellSize).toInt()</span><br><span class="line">                        <span class="keyword">val</span> point = GoPoint(x, y)</span><br><span class="line">                        <span class="comment">// 落子位置合法性：无子且不与 KO 点冲突</span></span><br><span class="line">                        <span class="keyword">if</span> (stonePositions.any &#123; it.first == point &#125; || (koPoint != <span class="literal">null</span> &amp;&amp; point == koPoint)) <span class="keyword">return</span><span class="symbol">@detectTapGestures</span></span><br><span class="line">                        stonePositions.add(point to isBlackTurn)</span><br><span class="line">                        moveHistory.add(point to isBlackTurn)</span><br><span class="line">                        <span class="comment">// 简易提子 &amp; KO 判定略去，仅演示</span></span><br><span class="line">                        isBlackTurn = !isBlackTurn</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        ) &#123;</span><br><span class="line">            Canvas(modifier = Modifier.matchParentSize()) &#123;</span><br><span class="line">                <span class="keyword">val</span> cellSize = size.width / <span class="number">19f</span></span><br><span class="line">                <span class="comment">// 绘制棋盘网格</span></span><br><span class="line">                <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0.</span><span class="number">.18</span>) &#123;</span><br><span class="line">                    drawLine(</span><br><span class="line">                        color = Color.Black,</span><br><span class="line">                        start = Offset(i * cellSize, <span class="number">0f</span>),</span><br><span class="line">                        end = Offset(i * cellSize, size.height)</span><br><span class="line">                    )</span><br><span class="line">                    drawLine(</span><br><span class="line">                        color = Color.Black,</span><br><span class="line">                        start = Offset(<span class="number">0f</span>, i * cellSize),</span><br><span class="line">                        end = Offset(size.width, i * cellSize)</span><br><span class="line">                    )</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 星位（九个星点）</span></span><br><span class="line">                <span class="keyword">val</span> stars = listOf(<span class="number">3</span>, <span class="number">9</span>, <span class="number">15</span>)</span><br><span class="line">                stars.forEach &#123; sx -&gt;</span><br><span class="line">                    stars.forEach &#123; sy -&gt;</span><br><span class="line">                        drawCircle(</span><br><span class="line">                            color = Color.Black,</span><br><span class="line">                            radius = <span class="number">5f</span>,</span><br><span class="line">                            center = Offset(sx * cellSize, sy * cellSize)</span><br><span class="line">                        )</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 绘制棋子</span></span><br><span class="line">                stonePositions.forEach &#123; (pt, isBlack) -&gt;</span><br><span class="line">                    drawCircle(</span><br><span class="line">                        color = <span class="keyword">if</span> (isBlack) Color.Black <span class="keyword">else</span> Color.White,</span><br><span class="line">                        radius = cellSize * <span class="number">0.45f</span>,</span><br><span class="line">                        center = Offset(pt.x * cellSize, pt.y * cellSize)</span><br><span class="line">                    )</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">16.</span>dp))</span><br><span class="line">        Row(horizontalArrangement = Arrangement.spacedBy(<span class="number">16.</span>dp)) &#123;</span><br><span class="line">            Button(onClick = &#123;</span><br><span class="line">                <span class="comment">// 悔棋：移除最后一步</span></span><br><span class="line">                <span class="keyword">if</span> (moveHistory.isNotEmpty()) &#123;</span><br><span class="line">                    <span class="keyword">val</span> last = moveHistory.removeAt(moveHistory.size - <span class="number">1</span>)</span><br><span class="line">                    stonePositions.remove(last)</span><br><span class="line">                    isBlackTurn = last.second</span><br><span class="line">                    <span class="comment">// 简易 KO 恢复略去</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;) &#123;</span><br><span class="line">                Text(<span class="string">&quot;悔棋&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            Button(onClick = &#123;</span><br><span class="line">                <span class="comment">// 重置棋局</span></span><br><span class="line">                stonePositions.clear()</span><br><span class="line">                moveHistory.clear()</span><br><span class="line">                isBlackTurn = <span class="literal">true</span></span><br><span class="line">                winner = <span class="literal">null</span></span><br><span class="line">                koPoint = <span class="literal">null</span></span><br><span class="line">            &#125;) &#123;</span><br><span class="line">                Text(<span class="string">&quot;重新开始&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Spacer(modifier = Modifier.height(<span class="number">16.</span>dp))</span><br><span class="line">        Text(text = <span class="string">&quot;点击星点附近落子。先黑后白。简单 Ko 劫判定。&quot;</span>, fontSize = <span class="number">14.</span>sp)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="MahjongScreen-kt"><a href="#MahjongScreen-kt" class="headerlink" title="MahjongScreen.kt"></a>MahjongScreen.kt</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myelderlyapp</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity</span><br><span class="line"><span class="keyword">import</span> android.content.pm.ActivityInfo</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.Canvas</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.background</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.clickable</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.layout.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.foundation.shape.RoundedCornerShape</span><br><span class="line"><span class="keyword">import</span> androidx.compose.material3.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.runtime.*</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Alignment</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.Modifier</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.graphics.Color</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.platform.LocalView</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.text.font.FontWeight</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.dp</span><br><span class="line"><span class="keyword">import</span> androidx.compose.ui.unit.sp</span><br><span class="line"><span class="keyword">import</span> androidx.navigation.NavController</span><br><span class="line"></span><br><span class="line"><span class="keyword">data</span> <span class="keyword">class</span> <span class="title class_">Tile</span>(<span class="keyword">val</span> emoji: String)</span><br><span class="line"></span><br><span class="line"><span class="meta">@Composable</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">MahjongScreen</span><span class="params">(navController: <span class="type">NavController</span>)</span></span> &#123;</span><br><span class="line">    <span class="comment">// 强制横屏</span></span><br><span class="line">    DisposableEffect(<span class="built_in">Unit</span>) &#123;</span><br><span class="line">        <span class="keyword">val</span> activity = (LocalView.current.context <span class="keyword">as</span> Activity)</span><br><span class="line">        activity.requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE</span><br><span class="line">        onDispose &#123; activity.requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_SENSOR &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 模拟四家手牌</span></span><br><span class="line">    <span class="keyword">val</span> bottomHand = remember &#123; mutableStateListOf&lt;Tile&gt;() &#125;</span><br><span class="line">    <span class="keyword">val</span> topHand = remember &#123; mutableStateListOf&lt;Tile&gt;() &#125;</span><br><span class="line">    <span class="keyword">val</span> leftHand = remember &#123; mutableStateListOf&lt;Tile&gt;() &#125;</span><br><span class="line">    <span class="keyword">val</span> rightHand = remember &#123; mutableStateListOf&lt;Tile&gt;() &#125;</span><br><span class="line">    <span class="keyword">val</span> centerDiscard = remember &#123; mutableStateListOf&lt;Tile&gt;() &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化——这里只放少量示例牌</span></span><br><span class="line">    LaunchedEffect(<span class="built_in">Unit</span>) &#123;</span><br><span class="line">        bottomHand.addAll(listOf(Tile(<span class="string">&quot;🀇&quot;</span>), Tile(<span class="string">&quot;🀈&quot;</span>), Tile(<span class="string">&quot;🀉&quot;</span>), Tile(<span class="string">&quot;🀊&quot;</span>), Tile(<span class="string">&quot;🀋&quot;</span>)))</span><br><span class="line">        topHand.addAll(listOf(Tile(<span class="string">&quot;🀇&quot;</span>), Tile(<span class="string">&quot;🀈&quot;</span>), Tile(<span class="string">&quot;🀉&quot;</span>), Tile(<span class="string">&quot;🀊&quot;</span>), Tile(<span class="string">&quot;🀋&quot;</span>)))</span><br><span class="line">        leftHand.addAll(listOf(Tile(<span class="string">&quot;🀇&quot;</span>), Tile(<span class="string">&quot;🀈&quot;</span>), Tile(<span class="string">&quot;🀉&quot;</span>), Tile(<span class="string">&quot;🀊&quot;</span>), Tile(<span class="string">&quot;🀋&quot;</span>)))</span><br><span class="line">        rightHand.addAll(listOf(Tile(<span class="string">&quot;🀇&quot;</span>), Tile(<span class="string">&quot;🀈&quot;</span>), Tile(<span class="string">&quot;🀉&quot;</span>), Tile(<span class="string">&quot;🀊&quot;</span>), Tile(<span class="string">&quot;🀋&quot;</span>)))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Column(</span><br><span class="line">        modifier = Modifier</span><br><span class="line">            .fillMaxSize()</span><br><span class="line">            .background(Color(<span class="number">0xFF00704A</span>))</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="comment">// 顶部：上家手牌（倒置）</span></span><br><span class="line">        Row(</span><br><span class="line">            modifier = Modifier</span><br><span class="line">                .fillMaxWidth()</span><br><span class="line">                .height(<span class="number">60.</span>dp),</span><br><span class="line">            horizontalArrangement = Arrangement.Center,</span><br><span class="line">            verticalAlignment = Alignment.CenterVertically</span><br><span class="line">        ) &#123;</span><br><span class="line">            topHand.reversed().forEach &#123; tile -&gt;</span><br><span class="line">                Text(</span><br><span class="line">                    text = <span class="string">&quot;🀫&quot;</span>, <span class="comment">// 牌背，倒置显示</span></span><br><span class="line">                    fontSize = <span class="number">24.</span>sp,</span><br><span class="line">                    modifier = Modifier.padding(horizontal = <span class="number">4.</span>dp)</span><br><span class="line">                )</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 中央：左家手牌 + 出牌区 + 右家手牌</span></span><br><span class="line">        Row(</span><br><span class="line">            modifier = Modifier</span><br><span class="line">                .fillMaxWidth()</span><br><span class="line">                .weight(<span class="number">1f</span>),</span><br><span class="line">            verticalAlignment = Alignment.CenterVertically</span><br><span class="line">        ) &#123;</span><br><span class="line">            <span class="comment">// 左家手牌（竖排）</span></span><br><span class="line">            Column(</span><br><span class="line">                modifier = Modifier</span><br><span class="line">                    .width(<span class="number">40.</span>dp)</span><br><span class="line">                    .fillMaxHeight(),</span><br><span class="line">                verticalArrangement = Arrangement.SpaceEvenly,</span><br><span class="line">                horizontalAlignment = Alignment.CenterHorizontally</span><br><span class="line">            ) &#123;</span><br><span class="line">                leftHand.forEach &#123; tile -&gt;</span><br><span class="line">                    Text(text = <span class="string">&quot;🀫&quot;</span>, fontSize = <span class="number">24.</span>sp)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 出牌区</span></span><br><span class="line">            Box(</span><br><span class="line">                modifier = Modifier</span><br><span class="line">                    .weight(<span class="number">1f</span>)</span><br><span class="line">                    .fillMaxHeight()</span><br><span class="line">                    .background(Color(<span class="number">0xFF004D3B</span>)),</span><br><span class="line">                contentAlignment = Alignment.Center</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="keyword">if</span> (centerDiscard.isEmpty()) &#123;</span><br><span class="line">                    Text(text = <span class="string">&quot;等待出牌&quot;</span>, fontSize = <span class="number">20.</span>sp, color = Color.White)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    Text(text = centerDiscard.last().emoji, fontSize = <span class="number">32.</span>sp)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 右家手牌（竖排，倒置显示）</span></span><br><span class="line">            Column(</span><br><span class="line">                modifier = Modifier</span><br><span class="line">                    .width(<span class="number">40.</span>dp)</span><br><span class="line">                    .fillMaxHeight(),</span><br><span class="line">                verticalArrangement = Arrangement.SpaceEvenly,</span><br><span class="line">                horizontalAlignment = Alignment.CenterHorizontally</span><br><span class="line">            ) &#123;</span><br><span class="line">                rightHand.reversed().forEach &#123; tile -&gt;</span><br><span class="line">                    Text(text = <span class="string">&quot;🀫&quot;</span>, fontSize = <span class="number">24.</span>sp)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 底部：玩家手牌 + 操作按钮</span></span><br><span class="line">        Column(</span><br><span class="line">            modifier = Modifier</span><br><span class="line">                .fillMaxWidth()</span><br><span class="line">                .height(<span class="number">120.</span>dp)</span><br><span class="line">                .background(Color(<span class="number">0xFF004D3B</span>))</span><br><span class="line">                .padding(<span class="number">8.</span>dp),</span><br><span class="line">            verticalArrangement = Arrangement.SpaceBetween</span><br><span class="line">        ) &#123;</span><br><span class="line">            <span class="comment">// 玩家手牌</span></span><br><span class="line">            Row(</span><br><span class="line">                modifier = Modifier</span><br><span class="line">                    .fillMaxWidth()</span><br><span class="line">                    .height(<span class="number">60.</span>dp),</span><br><span class="line">                horizontalArrangement = Arrangement.Center,</span><br><span class="line">                verticalAlignment = Alignment.CenterVertically</span><br><span class="line">            ) &#123;</span><br><span class="line">                bottomHand.forEach &#123; tile -&gt;</span><br><span class="line">                    Text(</span><br><span class="line">                        text = tile.emoji,</span><br><span class="line">                        fontSize = <span class="number">32.</span>sp,</span><br><span class="line">                        modifier = Modifier.padding(horizontal = <span class="number">4.</span>dp)</span><br><span class="line">                    )</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 操作按钮</span></span><br><span class="line">            Row(</span><br><span class="line">                modifier = Modifier</span><br><span class="line">                    .fillMaxWidth()</span><br><span class="line">                    .height(<span class="number">40.</span>dp),</span><br><span class="line">                horizontalArrangement = Arrangement.SpaceEvenly,</span><br><span class="line">                verticalAlignment = Alignment.CenterVertically</span><br><span class="line">            ) &#123;</span><br><span class="line">                Button(</span><br><span class="line">                    onClick = &#123;</span><br><span class="line">                        <span class="comment">// 碰示例：将玩家最后一张牌出到弃牌区</span></span><br><span class="line">                        <span class="keyword">if</span> (bottomHand.isNotEmpty()) &#123;</span><br><span class="line">                            <span class="keyword">val</span> tile = bottomHand.removeLast()</span><br><span class="line">                            centerDiscard.add(tile)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    colors = ButtonDefaults.buttonColors(containerColor = MaterialTheme.colorScheme.secondary),</span><br><span class="line">                    shape = RoundedCornerShape(<span class="number">20.</span>dp),</span><br><span class="line">                    modifier = Modifier.weight(<span class="number">1f</span>)</span><br><span class="line">                ) &#123;</span><br><span class="line">                    Text(<span class="string">&quot;碰&quot;</span>, color = Color.White)</span><br><span class="line">                &#125;</span><br><span class="line">                Button(</span><br><span class="line">                    onClick = &#123;</span><br><span class="line">                        <span class="comment">// 杠示例</span></span><br><span class="line">                        <span class="keyword">if</span> (bottomHand.isNotEmpty()) &#123;</span><br><span class="line">                            <span class="keyword">val</span> tile = bottomHand.removeLast()</span><br><span class="line">                            centerDiscard.add(tile)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    colors = ButtonDefaults.buttonColors(containerColor = MaterialTheme.colorScheme.secondary),</span><br><span class="line">                    shape = RoundedCornerShape(<span class="number">20.</span>dp),</span><br><span class="line">                    modifier = Modifier.weight(<span class="number">1f</span>)</span><br><span class="line">                ) &#123;</span><br><span class="line">                    Text(<span class="string">&quot;杠&quot;</span>, color = Color.White)</span><br><span class="line">                &#125;</span><br><span class="line">                Button(</span><br><span class="line">                    onClick = &#123;</span><br><span class="line">                        <span class="comment">// 胡示例</span></span><br><span class="line">                        <span class="keyword">if</span> (bottomHand.isNotEmpty()) &#123;</span><br><span class="line">                            <span class="keyword">val</span> tile = bottomHand.removeLast()</span><br><span class="line">                            centerDiscard.add(tile)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    colors = ButtonDefaults.buttonColors(containerColor = MaterialTheme.colorScheme.secondary),</span><br><span class="line">                    shape = RoundedCornerShape(<span class="number">20.</span>dp),</span><br><span class="line">                    modifier = Modifier.weight(<span class="number">1f</span>)</span><br><span class="line">                ) &#123;</span><br><span class="line">                    Text(<span class="string">&quot;胡&quot;</span>, color = Color.White)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="可改进与未来展望"><a href="#可改进与未来展望" class="headerlink" title="可改进与未来展望"></a>可改进与未来展望</h2><ol><li><p><strong>数据持久化</strong></p><ul><li>当前所有游戏与用户操作均为内存状态，应用重启后会丢失。</li><li>后续可引入 <strong>Room Database</strong>，将用户对局、健康记录、用药提醒等持久化到本地。</li></ul></li><li><p><strong>AI 对弈</strong></p><ul><li>为五子棋、象棋、围棋编写简单 AI，可以采用 Minimax、Alpha-Beta 剪枝、Monte-Carlo Tree Search 等算法，实现单机对战。</li></ul></li><li><p><strong>健康模块与第三方服务对接</strong></p><ul><li>集成真实医院挂号 API（如国家、省市医院统一挂号平台）、在线问诊接口。</li><li>用 <strong>WorkManager</strong> 做本地用药提醒，结合 Room 数据库存储提醒记录，并支持前台通知。</li></ul></li><li><p><strong>无障碍与中老年优化</strong></p><ul><li>支持动态字体：在 <code>MaterialTheme</code> 中允许用户根据系统字体大小自动缩放</li><li>添加 <strong>TalkBack</strong> 描述：为按钮、Image、Canvas 等 UI 元素添加无障碍标签</li><li>增加高对比度模式切换，以便色盲 &#x2F; 视力低下用户使用</li></ul></li><li><p><strong>UI&#x2F;代码复用</strong></p><ul><li>将常见的圆形按钮、卡片组件提炼为 <code>ElderlyButton</code>、<code>FeatureCard</code> 等可复用组件</li><li>每个游戏模块的重置、悔棋、胜利提示等逻辑可统一抽象出基类函数</li></ul></li><li><p><strong>版本与测试覆盖</strong></p><ul><li>使用 <strong>Compose UI Test</strong> 编写界面测试，验证登录流程、导航正确性、游戏胜负判定等关键逻辑</li><li>使用 <strong>JUnit 5</strong> 完成单元测试，针对 <code>checkWin()</code>、棋子合法落子函数等核心算法做充分验证</li></ul></li></ol><hr><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>“<strong>MyElderlyApp</strong>” 项目旨在为中老年用户提供一个简单易用、功能全面的移动应用示例，从登录认证到多模块集成，从页面布局到自定义 Canvas、从 Firebase Auth 到后续可扩展的 Room 数据库，涵盖了完整的移动端开发流程。</p><ul><li><p><strong>项目收获</strong>：</p><ol><li>深入理解 Jetpack Compose 多路由导航与状态管理；</li><li>掌握 Canvas 自绘与原生 View 嵌入的区别与实践；</li><li>熟悉 Firebase Auth 使用与 Compose 配合；</li><li>提升了面向中老年群体的 UI&#x2F;UX 设计思路。</li></ol></li><li><p><strong>未来挑战</strong>：</p><ol><li>如何在保证中老年用户可用性的前提下，继续丰富功能模块（如健康数据可视化、AI 对弈）；</li><li>如何在实际产品中做到线上线下数据同步，提供更完善的健康与服务生态；</li><li>如何持续维护与测试，保证项目质量，并根据用户反馈不断迭代。</li></ol></li></ul><p>希望本文及附带完整源码对您在移动端开发、游戏逻辑实现及中老年应用设计方面有所帮助。欢迎在评论区讨论、给出建议或指出问题。祝您开发顺利！</p><hr><blockquote><p><strong>下载链接</strong></p><ul><li><a href="https://github.com/huppee/myelderlyapp">项目完整代码（GitHub 仓库）</a></li><li>如果需要进一步集成 Firebase、Room 等，可参考仓库中的 <code>README.md</code> 进行配置。</li></ul></blockquote>]]></content:encoded>
      
      
      <category domain="https://huppe.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/">软件开发</category>
      
      
      <category domain="https://huppe.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/">软件开发</category>
      
      
      <comments>https://huppe.github.io/2025/06/03/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%B0%8F%E4%BD%9C%E4%B8%9A/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JAVA语言笔记</title>
      <link>https://huppe.github.io/2025/05/08/Jave%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</link>
      <guid>https://huppe.github.io/2025/05/08/Jave%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Thu, 08 May 2025 07:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;全面-Java-学习笔记&quot;&gt;&lt;a href=&quot;#全面-Java-学习笔记&quot; class=&quot;headerlink&quot; title=&quot;全面 Java 学习笔记&quot;&gt;&lt;/a&gt;全面 Java 学习笔记&lt;/h1&gt;&lt;p&gt;这份笔记为已经熟悉 Python 的计算机学生设计，旨在帮助</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="全面-Java-学习笔记"><a href="#全面-Java-学习笔记" class="headerlink" title="全面 Java 学习笔记"></a>全面 Java 学习笔记</h1><p>这份笔记为已经熟悉 Python 的计算机学生设计，旨在帮助你全面掌握 Java 语言及其在软件开发中的应用。内容从基础到进阶，包含详细注释的代码示例，逻辑清晰，适合系统学习和实践。</p><h2 id="1-Java-基础语法"><a href="#1-Java-基础语法" class="headerlink" title="1. Java 基础语法"></a>1. Java 基础语法</h2><h3 id="1-1-基本介绍"><a href="#1-1-基本介绍" class="headerlink" title="1.1 基本介绍"></a>1.1 基本介绍</h3><ul><li>Java 是一种<strong>静态类型</strong>、<strong>面向对象</strong>的编程语言，通过 JVM（Java 虚拟机）实现跨平台运行。</li><li>程序入口点是 <code>public static void main(String[] args)</code> 方法，必须定义在类中。</li><li>示例代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基础语法示例：Hello World 程序</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="comment">// 程序入口点，JVM 从这里开始执行</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 打印欢迎信息到控制台</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Welcome to Java!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-2-数据类型"><a href="#1-2-数据类型" class="headerlink" title="1.2 数据类型"></a>1.2 数据类型</h3><ul><li><strong>基本类型</strong>：<ul><li>整数：<code>byte</code> (8位), <code>short</code> (16位), <code>int</code> (32位), <code>long</code> (64位)</li><li>浮点：<code>float</code> (32位), <code>double</code> (64位)</li><li>字符：<code>char</code> (16位 Unicode)</li><li>布尔：<code>boolean</code> (true&#x2F;false)</li></ul></li><li><strong>引用类型</strong>：对象、数组、字符串等。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数据类型示例：展示基本类型和引用类型的声明与初始化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataTypes</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 声明并初始化基本数据类型</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">100</span>;           <span class="comment">// 32位整数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">price</span> <span class="operator">=</span> <span class="number">19.99</span>;       <span class="comment">// 64位浮点数</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">letter</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;          <span class="comment">// 16位 Unicode 字符</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isActive</span> <span class="operator">=</span> <span class="literal">true</span>;    <span class="comment">// 布尔值</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 声明引用类型 - 字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> <span class="string">&quot;Learning Java&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打印变量值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Number: &quot;</span> + number);</span><br><span class="line">        System.out.println(<span class="string">&quot;Price: &quot;</span> + price);</span><br><span class="line">        System.out.println(<span class="string">&quot;Letter: &quot;</span> + letter);</span><br><span class="line">        System.out.println(<span class="string">&quot;Active: &quot;</span> + isActive);</span><br><span class="line">        System.out.println(<span class="string">&quot;Text: &quot;</span> + text);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-3-运算符"><a href="#1-3-运算符" class="headerlink" title="1.3 运算符"></a>1.3 运算符</h3><ul><li><strong>算术</strong>：<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code></li><li><strong>比较</strong>：<code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code></li><li><strong>逻辑</strong>：<code>&amp;&amp;</code>, <code>||</code>, <code>!</code></li><li><strong>位运算</strong>：<code>&amp;</code>, <code>|</code>, <code>^</code>, <code>~</code>, <code>&lt;&lt;</code>, <code>&gt;&gt;</code>, <code>&gt;&gt;&gt;</code></li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 运算符示例：展示算术、比较和逻辑运算</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Operators</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 算术运算</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> a + b;    <span class="comment">// 加法</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">mod</span> <span class="operator">=</span> a % b;    <span class="comment">// 取模</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 比较运算</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isEqual</span> <span class="operator">=</span> (a == b);     <span class="comment">// 判断是否相等</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isGreater</span> <span class="operator">=</span> (a &gt; b);    <span class="comment">// 判断是否大于</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 逻辑运算</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> isGreater &amp;&amp; !isEqual; <span class="comment">// 与操作和非操作</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打印结果</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Sum: &quot;</span> + sum);       <span class="comment">// 输出 13</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Mod: &quot;</span> + mod);       <span class="comment">// 输出 1</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Equal: &quot;</span> + isEqual); <span class="comment">// 输出 false</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Result: &quot;</span> + result); <span class="comment">// 输出 true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-4-控制流"><a href="#1-4-控制流" class="headerlink" title="1.4 控制流"></a>1.4 控制流</h3><ul><li><strong>条件语句</strong>：<code>if</code>, <code>else if</code>, <code>else</code></li><li><strong>循环</strong>：<code>for</code>, <code>while</code>, <code>do-while</code></li><li><strong>分支</strong>：<code>switch</code></li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 控制流示例：展示条件语句和循环</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ControlFlow</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 条件语句：检查数字大小</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">75</span>;</span><br><span class="line">        <span class="keyword">if</span> (number &gt; <span class="number">50</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Number is greater than 50&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (number &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Number is positive but 50 or less&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Number is zero or negative&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// for 循环：打印 0 到 2</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Loop iteration: &quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// switch 语句：根据值选择</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">day</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">switch</span> (day) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;Monday&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;Tuesday&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;Other day&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-5-数组与字符串"><a href="#1-5-数组与字符串" class="headerlink" title="1.5 数组与字符串"></a>1.5 数组与字符串</h3><ul><li><strong>数组</strong>：固定大小，声明如 <code>int[] arr = new int[5];</code> 或初始化如 <code>int[] arr = &#123;1, 2, 3&#125;;</code>。</li><li><strong>字符串</strong>：不可妻，常用方法包括 <code>length()</code>, <code>substring()</code>, <code>split()</code>。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数组与字符串示例：展示数组和字符串操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArraysAndStrings</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 声明并初始化数组</span></span><br><span class="line">        <span class="type">int</span>[] numbers = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];  <span class="comment">// 创建长度为 3 的数组</span></span><br><span class="line">        numbers[<span class="number">0</span>] = <span class="number">1</span>;              <span class="comment">// 设置第一个元素</span></span><br><span class="line">        numbers[<span class="number">1</span>] = <span class="number">2</span>;              <span class="comment">// 设置第二个元素</span></span><br><span class="line">        numbers[<span class="number">2</span>] = <span class="number">3</span>;              <span class="comment">// 设置第三个元素</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打印数组内容</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Array: &quot;</span> + java.util.Arrays.toString(numbers));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 声明并操作字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">greeting</span> <span class="operator">=</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">        greeting = greeting + <span class="string">&quot; Java!&quot;</span>; <span class="comment">// 字符串拼接</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Greeting: &quot;</span> + greeting); <span class="comment">// 输出 &quot;Hello Java!&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 字符串方法示例</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Length: &quot;</span> + greeting.length()); <span class="comment">// 输出字符串长度</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Substring: &quot;</span> + greeting.substring(<span class="number">0</span>, <span class="number">5</span>)); <span class="comment">// 输出 &quot;Hello&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-面向对象编程（OOP）"><a href="#2-面向对象编程（OOP）" class="headerlink" title="2. 面向对象编程（OOP）"></a>2. 面向对象编程（OOP）</h2><h3 id="2-1-类与对象"><a href="#2-1-类与对象" class="headerlink" title="2.1 类与对象"></a>2.1 类与对象</h3><ul><li>类是对象的模板，包含属性和方法。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类与对象示例：定义 Person 类并创建对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="comment">// 成员变量：使用 private 实现封装</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造方法：初始化对象属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;  <span class="comment">// this 区分成员变量和参数</span></span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 成员方法：输出问候语</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayHello</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, my name is &quot;</span> + name + <span class="string">&quot; and I am &quot;</span> + age + <span class="string">&quot; years old.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Getter 方法：提供对私有变量的访问</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 主方法：测试类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建 Person 对象</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Alice&quot;</span>, <span class="number">25</span>);</span><br><span class="line">        <span class="comment">// 调用方法</span></span><br><span class="line">        person.sayHello(); <span class="comment">// 输出 &quot;Hello, my name is Alice and I am 25 years old.&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-2-封装、继承、多态"><a href="#2-2-封装、继承、多态" class="headerlink" title="2.2 封装、继承、多态"></a>2.2 封装、继承、多态</h3><ul><li><strong>封装</strong>：通过 <code>private</code> 和 <code>public</code> 控制访问。</li><li><strong>继承</strong>：使用 <code>extends</code> 关键字。</li><li><strong>多态</strong>：通过方法重写（<code>@Override</code>）和重载实现。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 继承与多态示例：Student 类继承 Person 类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="comment">// 额外的成员变量</span></span><br><span class="line">    <span class="keyword">private</span> String studentId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造方法：调用父类构造方法并初始化子类属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age, String studentId)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, age);      <span class="comment">// 调用父类构造方法</span></span><br><span class="line">        <span class="built_in">this</span>.studentId = studentId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写父类方法：自定义问候语</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayHello</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hi, I am a student named &quot;</span> + getName() + <span class="string">&quot; with ID &quot;</span> + studentId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 主方法：测试继承和多态</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建 Student 对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Bob&quot;</span>, <span class="number">20</span>, <span class="string">&quot;S123&quot;</span>);</span><br><span class="line">        <span class="comment">// 调用重写的方法</span></span><br><span class="line">        student.sayHello(); <span class="comment">// 输出 &quot;Hi, I am a student named Bob with ID S123&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-3-接口与抽象类"><a href="#2-3-接口与抽象类" class="headerlink" title="2.3 接口与抽象类"></a>2.3 接口与抽象类</h3><ul><li><strong>抽象类</strong>：不能实例化，包含抽象方法。</li><li><strong>接口</strong>：定义行为规范，类通过 <code>implements</code> 实现。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接口与抽象类示例：定义 Shape 抽象类和 Printable 接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Shape</span> &#123;</span><br><span class="line">    <span class="comment">// 抽象方法：子类必须实现</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="type">double</span> <span class="title function_">area</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Printable</span> &#123;</span><br><span class="line">    <span class="comment">// 接口方法：实现类必须提供</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> <span class="keyword">extends</span> <span class="title class_">Shape</span> <span class="keyword">implements</span> <span class="title class_">Printable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> radius;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Circle</span><span class="params">(<span class="type">double</span> radius)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.radius = radius;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实现抽象方法：计算面积</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="type">double</span> <span class="title function_">area</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Math.PI * radius * radius;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实现接口方法：打印信息</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Circle with area: &quot;</span> + area());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 主方法：测试</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Circle</span> <span class="variable">circle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Circle</span>(<span class="number">5.0</span>);</span><br><span class="line">        circle.print(); <span class="comment">// 输出 &quot;Circle with area: 78.53981633974483&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-4-静态成员"><a href="#2-4-静态成员" class="headerlink" title="2.4 静态成员"></a>2.4 静态成员</h3><ul><li><code>static</code> 修饰的成员属于类而非对象。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 静态成员示例：使用 static 定义类级别变量和方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Counter</span> &#123;</span><br><span class="line">    <span class="comment">// 静态变量：所有实例共享</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法：无需实例化即可调用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">increment</span><span class="params">()</span> &#123;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 主方法：测试静态成员</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 直接调用静态方法</span></span><br><span class="line">        Counter.increment();</span><br><span class="line">        Counter.increment();</span><br><span class="line">        <span class="comment">// 访问静态变量</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Count: &quot;</span> + Counter.count); <span class="comment">// 输出 &quot;Count: 2&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-异常处理"><a href="#3-异常处理" class="headerlink" title="3. 异常处理"></a>3. 异常处理</h2><h3 id="3-1-异常分类"><a href="#3-1-异常分类" class="headerlink" title="3.1 异常分类"></a>3.1 异常分类</h3><ul><li><strong>Checked 异常</strong>：编译时必须处理，如 <code>IOException</code>。</li><li><strong>Unchecked 异常</strong>：运行时异常，如 <code>NullPointerException</code>。</li></ul><h3 id="3-2-try-catch-finally"><a href="#3-2-try-catch-finally" class="headerlink" title="3.2 try-catch-finally"></a>3.2 try-catch-finally</h3><ul><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异常处理示例：展示 try-catch-finally 结构</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExceptionExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// try 块：尝试执行可能抛出异常的代码</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">10</span> / <span class="number">0</span>; <span class="comment">// 除以 0 会抛出 ArithmeticException</span></span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ArithmeticException e) &#123;</span><br><span class="line">            <span class="comment">// catch 块：捕获并处理异常</span></span><br><span class="line">            System.out.println(<span class="string">&quot;Error: Division by zero is not allowed.&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// finally 块：无论是否发生异常都执行</span></span><br><span class="line">            System.out.println(<span class="string">&quot;Exception handling completed.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-3-资源管理"><a href="#3-3-资源管理" class="headerlink" title="3.3 资源管理"></a>3.3 资源管理</h3><ul><li>使用 <code>try-with-resources</code> 自动关闭资源。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 资源管理示例：使用 try-with-resources 处理资源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResourceManagement</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// try-with-resources：自动关闭 StringReader</span></span><br><span class="line">        <span class="keyword">try</span> (java.io.<span class="type">StringReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.io.StringReader(<span class="string">&quot;Sample text&quot;</span>)) &#123;</span><br><span class="line">            <span class="type">int</span> character;</span><br><span class="line">            <span class="comment">// 读取并打印字符</span></span><br><span class="line">            <span class="keyword">while</span> ((character = reader.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">                System.out.print((<span class="type">char</span>) character);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (java.io.IOException e) &#123;</span><br><span class="line">            <span class="comment">// 处理可能的 IO 异常</span></span><br><span class="line">            System.out.println(<span class="string">&quot;IO Error: &quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-集合框架"><a href="#4-集合框架" class="headerlink" title="4. 集合框架"></a>4. 集合框架</h2><h3 id="4-1-核心接口"><a href="#4-1-核心接口" class="headerlink" title="4.1 核心接口"></a>4.1 核心接口</h3><ul><li><strong>List</strong>：<code>ArrayList</code>（动态数组），<code>LinkedList</code>（双向链表）</li><li><strong>Set</strong>：<code>HashSet</code>（无序，无重复），<code>TreeSet</code>（有序，无重复）</li><li><strong>Map</strong>：<code>HashMap</code>（键值对），<code>TreeMap</code>（有序键值对）</li></ul><h3 id="4-2-常用操作"><a href="#4-2-常用操作" class="headerlink" title="4.2 常用操作"></a>4.2 常用操作</h3><ul><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 集合框架示例：展示 List 和 Map 的使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CollectionsExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建并操作 ArrayList</span></span><br><span class="line">        List&lt;String&gt; languages = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        languages.add(<span class="string">&quot;Java&quot;</span>);    <span class="comment">// 添加元素</span></span><br><span class="line">        languages.add(<span class="string">&quot;Python&quot;</span>);</span><br><span class="line">        languages.add(<span class="string">&quot;C++&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Languages: &quot;</span> + languages);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建并操作 HashMap</span></span><br><span class="line">        Map&lt;String, Integer&gt; scores = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        scores.put(<span class="string">&quot;Alice&quot;</span>, <span class="number">95</span>);  <span class="comment">// 添加键值对</span></span><br><span class="line">        scores.put(<span class="string">&quot;Bob&quot;</span>, <span class="number">87</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Scores: &quot;</span> + scores);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历 List</span></span><br><span class="line">        <span class="keyword">for</span> (String lang : languages) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Language: &quot;</span> + lang);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历 Map</span></span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, Integer&gt; entry : scores.entrySet()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Student: &quot;</span> + entry.getKey() + <span class="string">&quot;, Score: &quot;</span> + entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="5-泛型"><a href="#5-泛型" class="headerlink" title="5. 泛型"></a>5. 泛型</h2><h3 id="5-1-泛型类与方法"><a href="#5-1-泛型类与方法" class="headerlink" title="5.1 泛型类与方法"></a>5.1 泛型类与方法</h3><ul><li>泛型确保类型安全，避免运行时错误。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 泛型示例：定义泛型类 Box 并使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Box</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="comment">// 泛型成员变量</span></span><br><span class="line">    <span class="keyword">private</span> T item;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 泛型方法：设置 item</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setItem</span><span class="params">(T item)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.item = item;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取 item</span></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">getItem</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 主方法：测试泛型</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建字符串类型的 Box</span></span><br><span class="line">        Box&lt;String&gt; stringBox = <span class="keyword">new</span> <span class="title class_">Box</span>&lt;&gt;();</span><br><span class="line">        stringBox.setItem(<span class="string">&quot;Java&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Box contains: &quot;</span> + stringBox.getItem());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建整数类型的 Box</span></span><br><span class="line">        Box&lt;Integer&gt; intBox = <span class="keyword">new</span> <span class="title class_">Box</span>&lt;&gt;();</span><br><span class="line">        intBox.setItem(<span class="number">123</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Box contains: &quot;</span> + intBox.getItem());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-2-通配符"><a href="#5-2-通配符" class="headerlink" title="5.2 通配符"></a>5.2 通配符</h3><ul><li><code>? extends T</code>（上界）：只读。</li><li><code>? super T</code>（下界）：只写。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通配符示例：展示泛型通配符的使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WildcardExample</span> &#123;</span><br><span class="line">    <span class="comment">// 使用上界通配符：只读</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printList</span><span class="params">(List&lt;? extends Number&gt; list)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (Number n : list) &#123;</span><br><span class="line">            System.out.println(n);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; intList = Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">        printList(intList); <span class="comment">// 输出 1, 2, 3</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="6-多线程"><a href="#6-多线程" class="headerlink" title="6. 多线程"></a>6. 多线程</h2><h3 id="6-1-线程创建"><a href="#6-1-线程创建" class="headerlink" title="6.1 线程创建"></a>6.1 线程创建</h3><ul><li>通过 <code>Thread</code> 类或 <code>Runnable</code> 接口创建线程。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 多线程示例：创建并运行线程</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 使用 Lambda 表达式创建线程</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="comment">// 线程任务：打印 0 到 2</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;Thread running: &quot;</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启动线程</span></span><br><span class="line">        thread.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 主线程继续执行</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Main thread continues.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="6-2-同步"><a href="#6-2-同步" class="headerlink" title="6.2 同步"></a>6.2 同步</h3><ul><li>使用 <code>synchronized</code> 关键字确保线程安全。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 线程同步示例：使用 synchronized 确保计数器线程安全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SynchronizedCounter</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 同步方法：防止多线程并发修改</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">increment</span><span class="params">()</span> &#123;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取计数器值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">SynchronizedCounter</span> <span class="variable">counter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SynchronizedCounter</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建两个线程，分别调用 increment</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">                counter.increment();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">                counter.increment();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启动线程</span></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待线程完成</span></span><br><span class="line">        t1.join();</span><br><span class="line">        t2.join();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打印最终计数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Final count: &quot;</span> + counter.getCount()); <span class="comment">// 应输出 2000</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="7-文件-I-O"><a href="#7-文件-I-O" class="headerlink" title="7. 文件 I&#x2F;O"></a>7. 文件 I&#x2F;O</h2><h3 id="7-1-流类型"><a href="#7-1-流类型" class="headerlink" title="7.1 流类型"></a>7.1 流类型</h3><ul><li><strong>字节流</strong>：<code>InputStream</code>, <code>OutputStream</code></li><li><strong>字符流</strong>：<code>Reader</code>, <code>Writer</code></li></ul><h3 id="7-2-文件操作"><a href="#7-2-文件操作" class="headerlink" title="7.2 文件操作"></a>7.2 文件操作</h3><ul><li>示例（使用 <code>StringReader</code> 模拟文件读取）：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件 I/O 示例：使用 try-with-resources 模拟文件读取</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileIOExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// try-with-resources：自动关闭 StringReader</span></span><br><span class="line">        <span class="keyword">try</span> (java.io.<span class="type">StringReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.io.StringReader(<span class="string">&quot;Sample text&quot;</span>)) &#123;</span><br><span class="line">            <span class="type">int</span> character;</span><br><span class="line">            <span class="comment">// 读取并打印字符</span></span><br><span class="line">            <span class="keyword">while</span> ((character = reader.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">                System.out.print((<span class="type">char</span>) character);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (java.io.IOException e) &#123;</span><br><span class="line">            <span class="comment">// 处理可能的 IO 异常</span></span><br><span class="line">            System.out.println(<span class="string">&quot;IO Error: &quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="7-3-序列化"><a href="#7-3-序列化" class="headerlink" title="7.3 序列化"></a>7.3 序列化</h3><ul><li>将对象保存到文件或从文件恢复。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 序列化示例：将对象保存到流</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SerializationExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建 Person 对象（需实现 Serializable 接口）</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Charlie&quot;</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化对象到字节流</span></span><br><span class="line">        <span class="keyword">try</span> (<span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>())) &#123;</span><br><span class="line">            oos.writeObject(person);</span><br><span class="line">            System.out.println(<span class="string">&quot;Object serialized.&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Serialization error: &quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Person 类需实现 Serializable</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="8-Lambda-表达式与-Stream-API"><a href="#8-Lambda-表达式与-Stream-API" class="headerlink" title="8. Lambda 表达式与 Stream API"></a>8. Lambda 表达式与 Stream API</h2><h3 id="8-1-Lambda-表达式"><a href="#8-1-Lambda-表达式" class="headerlink" title="8.1 Lambda 表达式"></a>8.1 Lambda 表达式</h3><ul><li>简化匿名函数的写法。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Lambda 表达式示例：遍历列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LambdaExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建字符串列表</span></span><br><span class="line">        List&lt;String&gt; names = Arrays.asList(<span class="string">&quot;Java&quot;</span>, <span class="string">&quot;Python&quot;</span>, <span class="string">&quot;C++&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用 Lambda 表达式遍历</span></span><br><span class="line">        names.forEach(name -&gt; System.out.println(<span class="string">&quot;Language: &quot;</span> + name));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="8-2-Stream-API"><a href="#8-2-Stream-API" class="headerlink" title="8.2 Stream API"></a>8.2 Stream API</h3><ul><li>用于处理集合的函数式编程。</li><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Stream API 示例：过滤和转换集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StreamExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建字符串列表</span></span><br><span class="line">        List&lt;String&gt; names = Arrays.asList(<span class="string">&quot;Java&quot;</span>, <span class="string">&quot;Python&quot;</span>, <span class="string">&quot;C++&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用 Stream 过滤和转换</span></span><br><span class="line">        names.stream()</span><br><span class="line">             .filter(name -&gt; name.length() &gt; <span class="number">3</span>)      <span class="comment">// 过滤长度大于 3 的名字</span></span><br><span class="line">             .map(name -&gt; name.toUpperCase())        <span class="comment">// 转换为大写</span></span><br><span class="line">             .forEach(name -&gt; System.out.println(<span class="string">&quot;Filtered and transformed: &quot;</span> + name));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="9-实践建议"><a href="#9-实践建议" class="headerlink" title="9. 实践建议"></a>9. 实践建议</h2><ul><li><strong>项目 1</strong>：命令行计算器<ul><li>使用集合存储历史记录，异常处理用户输入错误。</li></ul></li><li><strong>项目 2</strong>：多线程文件处理器<ul><li>实现多线程读取和处理文本文件。</li></ul></li><li><strong>项目 3</strong>：基于 Stream 的数据分析工具<ul><li>使用 Stream API 分析 CSV 文件中的数据。</li></ul></li><li><strong>项目 4</strong>：简单 Web 应用<ul><li>使用 Spring Boot 搭建 RESTful API。</li></ul></li></ul><h2 id="10-Java-与-Python-的对比"><a href="#10-Java-与-Python-的对比" class="headerlink" title="10. Java 与 Python 的对比"></a>10. Java 与 Python 的对比</h2><ul><li><strong>类型</strong>：Java 是静态类型，变量需声明类型；Python 是动态类型。</li><li><strong>性能</strong>：Java 编译为字节码，运行速度通常快于 Python。</li><li><strong>语法</strong>：Java 语法更严格，代码更冗长；Python 简洁。</li><li><strong>并发</strong>：Java 多线程支持强大；Python 受 GIL（全局解释器锁）限制。</li></ul><p>这份笔记涵盖了 Java 的核心概念，代码示例带有详细注释，逻辑清晰，适合从 Python 转到 Java 的学生学习和实践。</p>]]></content:encoded>
      
      
      <category domain="https://huppe.github.io/categories/%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/">语言笔记</category>
      
      
      <category domain="https://huppe.github.io/tags/%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/">语言笔记</category>
      
      
      <comments>https://huppe.github.io/2025/05/08/Jave%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Python语言笔记</title>
      <link>https://huppe.github.io/2025/04/20/Python%20%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</link>
      <guid>https://huppe.github.io/2025/04/20/Python%20%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Sun, 20 Apr 2025 04:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Python-语言笔记（网络空间安全）&quot;&gt;&lt;a href=&quot;#Python-语言笔记（网络空间安全）&quot; class=&quot;headerlink&quot; title=&quot;Python 语言笔记（网络空间安全）&quot;&gt;&lt;/a&gt;Python 语言笔记（网络空间安全）&lt;/h1&gt;&lt;p&gt;这是</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Python-语言笔记（网络空间安全）"><a href="#Python-语言笔记（网络空间安全）" class="headerlink" title="Python 语言笔记（网络空间安全）"></a>Python 语言笔记（网络空间安全）</h1><p>这是一份全面、详尽、通俗易懂的 Python 语言学习笔记，结合网络空间安全学习要求，适合初学者和进阶学习者。笔记涵盖 Python 基础语法、数据类型、控制流、函数、模块、文件操作、异常处理、面向对象编程，以及网络安全相关的高级主题。每部分配有示例代码和解释，帮助快速上手并深入理解。</p><h2 id="1-Python-简介"><a href="#1-Python-简介" class="headerlink" title="1. Python 简介"></a>1. Python 简介</h2><p>Python 是一种高级、解释型、通用编程语言，由 Guido van Rossum 于 1991 年创建，因其语法简洁、功能强大而广受欢迎。它在 Web 开发、数据分析、人工智能和网络安全等领域有广泛应用。</p><h3 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h3><ul><li><strong>易学易用</strong>：语法接近自然语言，适合初学者。</li><li><strong>开源免费</strong>：拥有庞大社区和丰富的第三方库。</li><li><strong>跨平台</strong>：支持 Windows、macOS、Linux 等系统。</li><li><strong>多范式</strong>：支持面向过程、面向对象和函数式编程。</li></ul><h2 id="2-环境搭建"><a href="#2-环境搭建" class="headerlink" title="2. 环境搭建"></a>2. 环境搭建</h2><p>学习 Python 前需安装 Python 环境，推荐使用 Python 3.x 版本。</p><h3 id="安装-Python："><a href="#安装-Python：" class="headerlink" title="安装 Python："></a>安装 Python：</h3><ol><li>访问 Python 官网 下载安装包。</li><li>安装时勾选“Add Python to PATH”。</li><li>在命令行输入 <code>python --version</code> 检查安装是否成功。</li></ol><h3 id="推荐工具："><a href="#推荐工具：" class="headerlink" title="推荐工具："></a>推荐工具：</h3><ul><li><strong>PyCharm</strong>：专业 IDE，适合开发大型项目。</li><li><strong>VS Code</strong>：轻量编辑器，配合 Python 插件使用。</li><li><strong>Jupyter Notebook</strong>：交互式环境，适合数据分析和安全脚本测试。</li></ul><h2 id="3-基础语法"><a href="#3-基础语法" class="headerlink" title="3. 基础语法"></a>3. 基础语法</h2><h3 id="3-1-变量和数据类型"><a href="#3-1-变量和数据类型" class="headerlink" title="3.1 变量和数据类型"></a>3.1 变量和数据类型</h3><p>Python 变量无需声明类型，赋值时自动确定。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">10</span>          <span class="comment"># 整数</span></span><br><span class="line">y = <span class="number">3.14</span>        <span class="comment"># 浮点数</span></span><br><span class="line">name = <span class="string">&quot;Alice&quot;</span>  <span class="comment"># 字符串</span></span><br><span class="line">is_ok = <span class="literal">True</span>    <span class="comment"># 布尔值</span></span><br></pre></td></tr></table></figure><h4 id="基本数据类型："><a href="#基本数据类型：" class="headerlink" title="基本数据类型："></a>基本数据类型：</h4><ul><li><strong>整数（int）</strong>：如 5, -10</li><li><strong>浮点数（float）</strong>：如 3.14, -0.5</li><li><strong>字符串（str）</strong>：如 “Hello”, ‘Python’</li><li><strong>布尔值（bool）</strong>：True 或 False</li></ul><h4 id="类型转换："><a href="#类型转换：" class="headerlink" title="类型转换："></a>类型转换：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">25</span></span><br><span class="line">age_str = <span class="built_in">str</span>(age)  <span class="comment"># 转为字符串: &quot;25&quot;</span></span><br><span class="line">pi = <span class="number">3.14</span></span><br><span class="line">pi_int = <span class="built_in">int</span>(pi)    <span class="comment"># 转为整数: 3</span></span><br></pre></td></tr></table></figure><h3 id="3-2-运算符"><a href="#3-2-运算符" class="headerlink" title="3.2 运算符"></a>3.2 运算符</h3><h4 id="算术运算符："><a href="#算术运算符：" class="headerlink" title="算术运算符："></a>算术运算符：</h4><ul><li><code>+</code>（加）、<code>-</code>（减）、<code>*</code>（乘）、<code>/</code>（除）、<code>//</code>（整除）、<code>%</code>（取模）、<code>**</code>（幂）</li></ul><h4 id="比较运算符："><a href="#比较运算符：" class="headerlink" title="比较运算符："></a>比较运算符：</h4><ul><li><code>==</code>（等于）、<code>!=</code>（不等于）、<code>&gt;</code>、<code>&gt;=</code>、<code>&lt;</code>、<code>&lt;=</code></li></ul><h4 id="逻辑运算符："><a href="#逻辑运算符：" class="headerlink" title="逻辑运算符："></a>逻辑运算符：</h4><ul><li><code>and</code>（与）、<code>or</code>（或）、<code>not</code>（非）</li></ul><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(a + b)    <span class="comment"># 13</span></span><br><span class="line"><span class="built_in">print</span>(a / b)    <span class="comment"># 3.333...</span></span><br><span class="line"><span class="built_in">print</span>(a // b)   <span class="comment"># 3</span></span><br><span class="line"><span class="built_in">print</span>(a % b)    <span class="comment"># 1</span></span><br><span class="line"><span class="built_in">print</span>(a ** b)   <span class="comment"># 1000</span></span><br><span class="line"><span class="built_in">print</span>(a &gt; b)    <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(a &gt; <span class="number">5</span> <span class="keyword">and</span> b &lt; <span class="number">5</span>)  <span class="comment"># True</span></span><br></pre></td></tr></table></figure><h2 id="4-控制流"><a href="#4-控制流" class="headerlink" title="4. 控制流"></a>4. 控制流</h2><h3 id="4-1-条件语句"><a href="#4-1-条件语句" class="headerlink" title="4.1 条件语句"></a>4.1 条件语句</h3><h4 id="if-elif-else："><a href="#if-elif-else：" class="headerlink" title="if-elif-else："></a>if-elif-else：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">18</span></span><br><span class="line"><span class="keyword">if</span> age &lt; <span class="number">18</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;未成年&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> age == <span class="number">18</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;刚成年&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;成年&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="三元运算符："><a href="#三元运算符：" class="headerlink" title="三元运算符："></a>三元运算符：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">status = <span class="string">&quot;成年&quot;</span> <span class="keyword">if</span> age &gt;= <span class="number">18</span> <span class="keyword">else</span> <span class="string">&quot;未成年&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4-2-循环语句"><a href="#4-2-循环语句" class="headerlink" title="4.2 循环语句"></a>4.2 循环语句</h3><h4 id="for-循环："><a href="#for-循环：" class="headerlink" title="for 循环："></a>for 循环：</h4><ul><li>遍历列表、字符串等：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fruits = [<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;cherry&quot;</span>]</span><br><span class="line"><span class="keyword">for</span> fruit <span class="keyword">in</span> fruits:</span><br><span class="line">    <span class="built_in">print</span>(fruit)</span><br></pre></td></tr></table></figure><ul><li>使用 <code>range()</code>：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):  <span class="comment"># 0 到 4</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><h4 id="while-循环："><a href="#while-循环：" class="headerlink" title="while 循环："></a>while 循环：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> count &lt; <span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(count)</span><br><span class="line">    count += <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="循环控制："><a href="#循环控制：" class="headerlink" title="循环控制："></a>循环控制：</h4><ul><li><code>break</code>：跳出循环</li><li><code>continue</code>：跳过本次循环</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(i)  <span class="comment"># 输出 0 到 4</span></span><br></pre></td></tr></table></figure><h2 id="5-数据结构"><a href="#5-数据结构" class="headerlink" title="5. 数据结构"></a>5. 数据结构</h2><h3 id="5-1-列表（List）"><a href="#5-1-列表（List）" class="headerlink" title="5.1 列表（List）"></a>5.1 列表（List）</h3><h4 id="特点：有序、可变、允许重复"><a href="#特点：有序、可变、允许重复" class="headerlink" title="特点：有序、可变、允许重复"></a>特点：有序、可变、允许重复</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>]</span><br></pre></td></tr></table></figure><h4 id="常用方法："><a href="#常用方法：" class="headerlink" title="常用方法："></a>常用方法：</h4><ul><li><code>append()</code>：加到末尾</li><li><code>insert()</code>：插入到指定位置</li><li><code>remove()</code>：删除指定元素</li><li><code>pop()</code>：删除并返回元素</li><li><code>sort()</code>：排序</li></ul><h4 id="示例：-1"><a href="#示例：-1" class="headerlink" title="示例："></a>示例：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_list.append(<span class="number">4</span>)    <span class="comment"># [1, 2, 3, &quot;a&quot;, &quot;b&quot;, 4]</span></span><br><span class="line">my_list.remove(<span class="string">&quot;a&quot;</span>)  <span class="comment"># [1, 2, 3, &quot;b&quot;, 4]</span></span><br></pre></td></tr></table></figure><h3 id="5-2-元组（Tuple）"><a href="#5-2-元组（Tuple）" class="headerlink" title="5.2 元组（Tuple）"></a>5.2 元组（Tuple）</h3><h4 id="特点：有序、不可变"><a href="#特点：有序、不可变" class="headerlink" title="特点：有序、不可变"></a>特点：有序、不可变</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_tuple = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(my_tuple[<span class="number">0</span>])  <span class="comment"># 1</span></span><br></pre></td></tr></table></figure><h3 id="5-3-字典（Dictionary）"><a href="#5-3-字典（Dictionary）" class="headerlink" title="5.3 字典（Dictionary）"></a>5.3 字典（Dictionary）</h3><h4 id="特点：键值对、无序、可变"><a href="#特点：键值对、无序、可变" class="headerlink" title="特点：键值对、无序、可变"></a>特点：键值对、无序、可变</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_dict = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Alice&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">25</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="常用方法：-1"><a href="#常用方法：-1" class="headerlink" title="常用方法："></a>常用方法：</h4><ul><li><code>keys()</code>：所有键</li><li><code>values()</code>：所有值</li><li><code>items()</code>：所有键值对</li><li><code>get()</code>：获取值</li></ul><h4 id="示例：-2"><a href="#示例：-2" class="headerlink" title="示例："></a>示例：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(my_dict[<span class="string">&quot;name&quot;</span>])  <span class="comment"># Alice</span></span><br><span class="line">my_dict[<span class="string">&quot;age&quot;</span>] = <span class="number">26</span>     <span class="comment"># 修改值</span></span><br></pre></td></tr></table></figure><h3 id="5-4-集合（Set）"><a href="#5-4-集合（Set）" class="headerlink" title="5.4 集合（Set）"></a>5.4 集合（Set）</h3><h4 id="特点：无序、不重复"><a href="#特点：无序、不重复" class="headerlink" title="特点：无序、不重复"></a>特点：无序、不重复</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_set = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>&#125;  <span class="comment"># &#123;1, 2, 3&#125;</span></span><br></pre></td></tr></table></figure><h4 id="常用方法：-2"><a href="#常用方法：-2" class="headerlink" title="常用方法："></a>常用方法：</h4><ul><li><code>add()</code>：添加</li><li><code>remove()</code>：删除</li><li><code>union()</code>：并集</li><li><code>intersection()</code>：交集</li></ul><h4 id="示例：-3"><a href="#示例：-3" class="headerlink" title="示例："></a>示例：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_set.add(<span class="number">4</span>)  <span class="comment"># &#123;1, 2, 3, 4&#125;</span></span><br></pre></td></tr></table></figure><h2 id="6-函数"><a href="#6-函数" class="headerlink" title="6. 函数"></a>6. 函数</h2><h3 id="定义与调用："><a href="#定义与调用：" class="headerlink" title="定义与调用："></a>定义与调用：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">greet</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;Hello, <span class="subst">&#123;name&#125;</span>!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(greet(<span class="string">&quot;Alice&quot;</span>))  <span class="comment"># Hello, Alice!</span></span><br></pre></td></tr></table></figure><h3 id="参数类型："><a href="#参数类型：" class="headerlink" title="参数类型："></a>参数类型：</h3><ul><li><strong>默认参数</strong>：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">a, b=<span class="number">0</span></span>):</span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">5</span>))  <span class="comment"># 5</span></span><br></pre></td></tr></table></figure><ul><li><strong>可变参数</strong>：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">total</span>(<span class="params">*args</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(args)</span><br><span class="line"><span class="built_in">print</span>(total(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))  <span class="comment"># 6</span></span><br></pre></td></tr></table></figure><h3 id="匿名函数："><a href="#匿名函数：" class="headerlink" title="匿名函数："></a>匿名函数：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">square = <span class="keyword">lambda</span> x: x ** <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(square(<span class="number">5</span>))  <span class="comment"># 25</span></span><br></pre></td></tr></table></figure><h2 id="7-模块和包"><a href="#7-模块和包" class="headerlink" title="7. 模块和包"></a>7. 模块和包</h2><h3 id="导入模块："><a href="#导入模块：" class="headerlink" title="导入模块："></a>导入模块：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="built_in">print</span>(math.pi)  <span class="comment"># 3.14159...</span></span><br></pre></td></tr></table></figure><h3 id="自定义模块："><a href="#自定义模块：" class="headerlink" title="自定义模块："></a>自定义模块：</h3><p>假设有个文件 <code>mymodule.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mymodule.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">say_hi</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hi!&quot;</span>)</span><br></pre></td></tr></table></figure><p>使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> mymodule <span class="keyword">import</span> say_hi</span><br><span class="line">say_hi()  <span class="comment"># Hi!</span></span><br></pre></td></tr></table></figure><h2 id="8-文件操作"><a href="#8-文件操作" class="headerlink" title="8. 文件操作"></a>8. 文件操作</h2><h3 id="读写文件："><a href="#读写文件：" class="headerlink" title="读写文件："></a>读写文件：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 写文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(<span class="string">&quot;Hello!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    <span class="built_in">print</span>(file.read())  <span class="comment"># Hello!</span></span><br></pre></td></tr></table></figure><h2 id="9-异常处理"><a href="#9-异常处理" class="headerlink" title="9. 异常处理"></a>9. 异常处理</h2><h3 id="try-except："><a href="#try-except：" class="headerlink" title="try-except："></a>try-except：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    x = <span class="number">1</span> / <span class="number">0</span></span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不能除以 0&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="raise-抛异常："><a href="#raise-抛异常：" class="headerlink" title="raise 抛异常："></a>raise 抛异常：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> age &lt; <span class="number">18</span>:</span><br><span class="line">    <span class="keyword">raise</span> ValueError(<span class="string">&quot;年龄太小&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="10-面向对象编程"><a href="#10-面向对象编程" class="headerlink" title="10. 面向对象编程"></a>10. 面向对象编程</h2><h3 id="类与对象："><a href="#类与对象：" class="headerlink" title="类与对象："></a>类与对象：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bark</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Woof!&quot;</span></span><br><span class="line"></span><br><span class="line">dog = Dog(<span class="string">&quot;Buddy&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(dog.bark())  <span class="comment"># Woof!</span></span><br></pre></td></tr></table></figure><h3 id="继承："><a href="#继承：" class="headerlink" title="继承："></a>继承：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Puppy</span>(<span class="title class_ inherited__">Dog</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bark</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Yip!&quot;</span></span><br><span class="line"></span><br><span class="line">puppy = Puppy(<span class="string">&quot;Max&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(puppy.bark())  <span class="comment"># Yip!</span></span><br></pre></td></tr></table></figure><h2 id="11-高级主题"><a href="#11-高级主题" class="headerlink" title="11. 高级主题"></a>11. 高级主题</h2><h3 id="装饰器："><a href="#装饰器：" class="headerlink" title="装饰器："></a>装饰器：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">deco</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapper</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;开始&quot;</span>)</span><br><span class="line">        func()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;结束&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@deco</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">say</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hello&quot;</span>)</span><br><span class="line"></span><br><span class="line">say()</span><br><span class="line"><span class="comment"># 输出：</span></span><br><span class="line"><span class="comment"># 开始</span></span><br><span class="line"><span class="comment"># Hello</span></span><br><span class="line"><span class="comment"># 结束</span></span><br></pre></td></tr></table></figure><h3 id="生成器："><a href="#生成器：" class="headerlink" title="生成器："></a>生成器：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">count</span>(<span class="params">n</span>):</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; n:</span><br><span class="line">        <span class="keyword">yield</span> i</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> count(<span class="number">3</span>):</span><br><span class="line">    <span class="built_in">print</span>(x)  <span class="comment"># 0 1 2</span></span><br></pre></td></tr></table></figure><h2 id="12-标准库与第三方库"><a href="#12-标准库与第三方库" class="headerlink" title="12. 标准库与第三方库"></a>12. 标准库与第三方库</h2><h3 id="标准库："><a href="#标准库：" class="headerlink" title="标准库："></a>标准库：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="built_in">print</span>(os.getcwd())  <span class="comment"># 当前目录</span></span><br></pre></td></tr></table></figure><h3 id="第三方库："><a href="#第三方库：" class="headerlink" title="第三方库："></a>第三方库：</h3><p>安装：<code>pip install requests</code></p><p>使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">response = requests.get(<span class="string">&quot;https://api.github.com&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><h2 id="13-Python-在网络空间安全中的应用"><a href="#13-Python-在网络空间安全中的应用" class="headerlink" title="13. Python 在网络空间安全中的应用"></a>13. Python 在网络空间安全中的应用</h2><p>Python 因其简洁性和丰富库在网络安全领域广受欢迎，适用于自动化任务、网络扫描、数据加密等。</p><h3 id="13-1-网络安全中的-Python-概述"><a href="#13-1-网络安全中的-Python-概述" class="headerlink" title="13.1 网络安全中的 Python 概述"></a>13.1 网络安全中的 Python 概述</h3><p>Python 在网络安全中的优势包括：</p><ul><li><strong>易用性</strong>：语法简单，适合快速开发安全脚本。</li><li><strong>丰富库</strong>：如 Scapy、Requests、Cryptography，支持多种安全任务。</li><li><strong>跨平台</strong>：可在多种操作系统上运行。</li><li><strong>社区支持</strong>：大量开源项目和论坛提供支持。</li></ul><h4 id="应用领域："><a href="#应用领域：" class="headerlink" title="应用领域："></a>应用领域：</h4><ul><li><strong>网络扫描</strong>：检测开放端口和网络漏洞。</li><li><strong>Web 安全</strong>：测试 SQL 注入、跨站脚本攻击（XSS）等。</li><li><strong>数据加密</strong>：保护敏感信息。</li><li><strong>自动化</strong>：简化日志分析、监控等任务。</li></ul><h3 id="13-2-基础编程在安全中的应用"><a href="#13-2-基础编程在安全中的应用" class="headerlink" title="13.2 基础编程在安全中的应用"></a>13.2 基础编程在安全中的应用</h3><h4 id="13-2-1-变量和数据类型"><a href="#13-2-1-变量和数据类型" class="headerlink" title="13.2.1 变量和数据类型"></a>13.2.1 变量和数据类型</h4><p>在安全脚本中，常用数据类型处理网络数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">port = <span class="number">8080</span></span><br><span class="line">ip_address = <span class="string">&quot;192.168.1.1&quot;</span></span><br><span class="line">open_ports = [<span class="number">22</span>, <span class="number">80</span>, <span class="number">443</span>]</span><br><span class="line">user_data = &#123;<span class="string">&quot;username&quot;</span>: <span class="string">&quot;admin&quot;</span>, <span class="string">&quot;password&quot;</span>: <span class="string">&quot;securepass&quot;</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="13-2-2-控制结构"><a href="#13-2-2-控制结构" class="headerlink" title="13.2.2 控制结构"></a>13.2.2 控制结构</h4><p>用于决策和迭代，如检查端口状态。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> port <span class="keyword">in</span> open_ports:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;端口 <span class="subst">&#123;port&#125;</span> 开放&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;端口 <span class="subst">&#123;port&#125;</span> 关闭&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="13-3-网络编程与安全"><a href="#13-3-网络编程与安全" class="headerlink" title="13.3 网络编程与安全"></a>13.3 网络编程与安全</h3><h4 id="13-3-1-使用-Scapy-进行网络包操控"><a href="#13-3-1-使用-Scapy-进行网络包操控" class="headerlink" title="13.3.1 使用 Scapy 进行网络包操控"></a>13.3.1 使用 Scapy 进行网络包操控</h4><p>Scapy 用于创建、发送和分析网络包。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scapy.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">packet = IP(dst=<span class="string">&quot;8.8.8.8&quot;</span>) / ICMP()</span><br><span class="line">response = sr1(packet)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> response:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;响应：&quot;</span>, response.summary())</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;无响应&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="13-3-2-端口扫描"><a href="#13-3-2-端口扫描" class="headerlink" title="13.3.2 端口扫描"></a>13.3.2 端口扫描</h4><p>编写简单的端口扫描器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scan_port</span>(<span class="params">host, port</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        sock.settimeout(<span class="number">1</span>)</span><br><span class="line">        result = sock.connect_ex((host, port))</span><br><span class="line">        <span class="keyword">if</span> result == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;端口 <span class="subst">&#123;port&#125;</span> 开放&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;端口 <span class="subst">&#123;port&#125;</span> 关闭&quot;</span>)</span><br><span class="line">        sock.close()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;错误：<span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">scan_port(<span class="string">&quot;192.168.1.1&quot;</span>, <span class="number">80</span>)</span><br></pre></td></tr></table></figure><h3 id="13-4-Web-安全与-Python"><a href="#13-4-Web-安全与-Python" class="headerlink" title="13.4 Web 安全与 Python"></a>13.4 Web 安全与 Python</h3><h4 id="13-4-1-使用-Requests-进行安全-Web-请求"><a href="#13-4-1-使用-Requests-进行安全-Web-请求" class="headerlink" title="13.4.1 使用 Requests 进行安全 Web 请求"></a>13.4.1 使用 Requests 进行安全 Web 请求</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://example.com&quot;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;网站正常&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;网站异常&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;请求错误：<span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="13-4-2-检测-SQL-注入漏洞"><a href="#13-4-2-检测-SQL-注入漏洞" class="headerlink" title="13.4.2 检测 SQL 注入漏洞"></a>13.4.2 检测 SQL 注入漏洞</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://example.com/login&quot;</span></span><br><span class="line">data = &#123;<span class="string">&quot;username&quot;</span>: <span class="string">&quot;admin&#x27; OR &#x27;1&#x27;=&#x27;1&quot;</span>, <span class="string">&quot;password&quot;</span>: <span class="string">&quot;&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">response = requests.post(url, data=data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;Invalid username or password&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> response.text:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;可能存在 SQL 注入漏洞&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;未检测到 SQL 注入&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="13-5-数据加密与解密"><a href="#13-5-数据加密与解密" class="headerlink" title="13.5 数据加密与解密"></a>13.5 数据加密与解密</h3><h4 id="13-5-1-对称加密"><a href="#13-5-1-对称加密" class="headerlink" title="13.5.1 对称加密"></a>13.5.1 对称加密</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> cryptography.fernet <span class="keyword">import</span> Fernet</span><br><span class="line"></span><br><span class="line">key = Fernet.generate_key()</span><br><span class="line">cipher = Fernet(key)</span><br><span class="line">message = <span class="string">b&quot;Hello, World!&quot;</span></span><br><span class="line">encrypted = cipher.encrypt(message)</span><br><span class="line">decrypted = cipher.decrypt(encrypted)</span><br><span class="line"><span class="built_in">print</span>(decrypted.decode())</span><br></pre></td></tr></table></figure><h4 id="13-5-2-哈希函数"><a href="#13-5-2-哈希函数" class="headerlink" title="13.5.2 哈希函数"></a>13.5.2 哈希函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">data = <span class="string">b&quot;password123&quot;</span></span><br><span class="line">hash_object = hashlib.sha256(data)</span><br><span class="line">hex_dig = hash_object.hexdigest()</span><br><span class="line"><span class="built_in">print</span>(hex_dig)</span><br></pre></td></tr></table></figure><h3 id="13-6-自动化安全任务"><a href="#13-6-自动化安全任务" class="headerlink" title="13.6 自动化安全任务"></a>13.6 自动化安全任务</h3><h4 id="13-6-1-日志分析"><a href="#13-6-1-日志分析" class="headerlink" title="13.6.1 日志分析"></a>13.6.1 日志分析</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">log_line = <span class="string">&quot;2025-04-19 11:35:00 INFO User logged in: admin&quot;</span></span><br><span class="line"><span class="keyword">match</span> = re.search(<span class="string">r&quot;User logged in: (\w+)&quot;</span>, log_line)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">    user = <span class="keyword">match</span>.group(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;用户 <span class="subst">&#123;user&#125;</span> 登录&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="13-6-2-漏洞扫描"><a href="#13-6-2-漏洞扫描" class="headerlink" title="13.6.2 漏洞扫描"></a>13.6.2 漏洞扫描</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_vulnerability</span>(<span class="params">url</span>):</span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;vulnerable&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;url&#125;</span> 存在漏洞&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;url&#125;</span> 无漏洞&quot;</span>)</span><br><span class="line"></span><br><span class="line">urls = [<span class="string">&quot;https://example.com&quot;</span>, <span class="string">&quot;https://test.com&quot;</span>]</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">    check_vulnerability(url)</span><br></pre></td></tr></table></figure><h3 id="13-7-安全编码实践"><a href="#13-7-安全编码实践" class="headerlink" title="13.7 安全编码实践"></a>13.7 安全编码实践</h3><h4 id="13-7-1-输入验证"><a href="#13-7-1-输入验证" class="headerlink" title="13.7.1 输入验证"></a>13.7.1 输入验证</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">safe_input</span>(<span class="params">user_input</span>):</span><br><span class="line">    safe = user_input.replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> safe</span><br><span class="line"></span><br><span class="line">user_input = <span class="built_in">input</span>(<span class="string">&quot;输入用户名：&quot;</span>)</span><br><span class="line">safe_name = safe_input(user_input)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;欢迎，<span class="subst">&#123;safe_name&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="13-7-2-使用安全协议"><a href="#13-7-2-使用安全协议" class="headerlink" title="13.7.2 使用安全协议"></a>13.7.2 使用安全协议</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">&quot;https://example.com&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="13-7-3-异常处理"><a href="#13-7-3-异常处理" class="headerlink" title="13.7.3 异常处理"></a>13.7.3 异常处理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = requests.get(<span class="string">&quot;https://example.com&quot;</span>)</span><br><span class="line">    response.raise_for_status()</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;错误：<span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="13-8-与安全工具集成"><a href="#13-8-与安全工具集成" class="headerlink" title="13.8 与安全工具集成"></a>13.8 与安全工具集成</h3><h4 id="13-8-1-自动化-Nmap-扫描"><a href="#13-8-1-自动化-Nmap-扫描" class="headerlink" title="13.8.1 自动化 Nmap 扫描"></a>13.8.1 自动化 Nmap 扫描</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">result = subprocess.run([<span class="string">&quot;nmap&quot;</span>, <span class="string">&quot;-p&quot;</span>, <span class="string">&quot;80&quot;</span>, <span class="string">&quot;192.168.1.1&quot;</span>], capture_output=<span class="literal">True</span>, text=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(result.stdout)</span><br></pre></td></tr></table></figure><h2 id="14-学习建议"><a href="#14-学习建议" class="headerlink" title="14. 学习建议"></a>14. 学习建议</h2><ul><li><strong>多实践</strong>：编写代码，调试错误。</li><li><strong>做项目</strong>：如端口扫描器、日志分析工具。</li><li><strong>阅读文档</strong>：参考 Python 官方文档 和安全相关资源。</li><li><strong>参与社区</strong>：加入 Stack Overflow、Reddit（r&#x2F;learnpython、r&#x2F;cybersecurity）等。</li></ul>]]></content:encoded>
      
      
      <category domain="https://huppe.github.io/categories/%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/">语言笔记</category>
      
      
      <category domain="https://huppe.github.io/tags/%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/">语言笔记</category>
      
      <category domain="https://huppe.github.io/tags/Python/">Python</category>
      
      
      <comments>https://huppe.github.io/2025/04/20/Python%20%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SSH 免密登录配置笔记</title>
      <link>https://huppe.github.io/2025/04/20/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/</link>
      <guid>https://huppe.github.io/2025/04/20/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Sun, 20 Apr 2025 02:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;SSH-免密登录配置笔记&quot;&gt;&lt;a href=&quot;#SSH-免密登录配置笔记&quot; class=&quot;headerlink&quot; title=&quot;SSH 免密登录配置笔记&quot;&gt;&lt;/a&gt;SSH 免密登录配置笔记&lt;/h1&gt;&lt;h2 id=&quot;1-生成-SSH-密钥对&quot;&gt;&lt;a href=&quot;#1</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="SSH-免密登录配置笔记"><a href="#SSH-免密登录配置笔记" class="headerlink" title="SSH 免密登录配置笔记"></a>SSH 免密登录配置笔记</h1><h2 id="1-生成-SSH-密钥对"><a href="#1-生成-SSH-密钥对" class="headerlink" title="1. 生成 SSH 密钥对"></a>1. 生成 SSH 密钥对</h2><h3 id="1-1-使用-ssh-keygen-生成密钥对"><a href="#1-1-使用-ssh-keygen-生成密钥对" class="headerlink" title="1.1 使用 ssh-keygen 生成密钥对"></a>1.1 使用 <code>ssh-keygen</code> 生成密钥对</h3><p>在本地终端使用以下命令生成 SSH 密钥对：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096</span><br></pre></td></tr></table></figure><p>这会在 <code>~/.ssh/</code> 目录下生成私钥 <code>id_rsa</code> 和公钥 <code>id_rsa.pub</code>。</p><h3 id="1-2-设置密钥存储路径（可选）"><a href="#1-2-设置密钥存储路径（可选）" class="headerlink" title="1.2 设置密钥存储路径（可选）"></a>1.2 设置密钥存储路径（可选）</h3><p>如果希望将密钥存储在自定义路径，可以使用 <code>-f</code> 选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -f ~/.ssh/my_key</span><br></pre></td></tr></table></figure><p>此命令将私钥保存为 <code>~/.ssh/my_key</code>，公钥保存为 <code>~/.ssh/my_key.pub</code>。</p><h3 id="1-3-设置密钥密码（可选）"><a href="#1-3-设置密钥密码（可选）" class="headerlink" title="1.3 设置密钥密码（可选）"></a>1.3 设置密钥密码（可选）</h3><p>在生成过程中，您可以选择设置密钥的密码。虽然这样可以增加安全性，但每次使用私钥登录时需要输入密码。</p><h2 id="2-上传公钥到远程服务器"><a href="#2-上传公钥到远程服务器" class="headerlink" title="2. 上传公钥到远程服务器"></a>2. 上传公钥到远程服务器</h2><h3 id="2-1-使用-ssh-copy-id-命令（推荐）"><a href="#2-1-使用-ssh-copy-id-命令（推荐）" class="headerlink" title="2.1 使用 ssh-copy-id 命令（推荐）"></a>2.1 使用 <code>ssh-copy-id</code> 命令（推荐）</h3><p>最简单的方式是使用 <code>ssh-copy-id</code> 命令将公钥上传至远程服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub user@remote_host</span><br></pre></td></tr></table></figure><p>这会将本地公钥添加到远程服务器的 <code>~/.ssh/authorized_keys</code> 文件中。</p><h3 id="2-2-手动复制公钥"><a href="#2-2-手动复制公钥" class="headerlink" title="2.2 手动复制公钥"></a>2.2 手动复制公钥</h3><p>如果没有 <code>ssh-copy-id</code> 命令，可以手动将公钥复制到远程服务器：</p><ol><li><p>查看本地公钥内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></li><li><p>登录到远程服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh user@remote_host</span><br></pre></td></tr></table></figure></li><li><p>在远程服务器上创建 <code>.ssh</code> 目录（如果不存在）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/.ssh</span><br></pre></td></tr></table></figure></li><li><p>将公钥内容追加到 <code>authorized_keys</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;your_public_key&quot;</span> &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li><li><p>设置正确的权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 700 ~/.ssh</span><br><span class="line"><span class="built_in">chmod</span> 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-配置-SSH-服务端（可选）"><a href="#3-配置-SSH-服务端（可选）" class="headerlink" title="3. 配置 SSH 服务端（可选）"></a>3. 配置 SSH 服务端（可选）</h2><h3 id="3-1-编辑-SSH-配置文件"><a href="#3-1-编辑-SSH-配置文件" class="headerlink" title="3.1 编辑 SSH 配置文件"></a>3.1 编辑 SSH 配置文件</h3><p>通过编辑 SSH 配置文件 <code>sshd_config</code>，确保公钥认证和密码认证设置正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>确保以下配置项未被注释且已正确设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PubkeyAuthentication <span class="built_in">yes</span></span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure><h3 id="3-2-重启-SSH-服务"><a href="#3-2-重启-SSH-服务" class="headerlink" title="3.2 重启 SSH 服务"></a>3.2 重启 SSH 服务</h3><p>修改配置后，重启 SSH 服务以应用更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart sshd</span><br></pre></td></tr></table></figure><h2 id="4-测试免密登录"><a href="#4-测试免密登录" class="headerlink" title="4. 测试免密登录"></a>4. 测试免密登录</h2><p>使用以下命令测试是否可以成功通过 SSH 登录远程服务器，而不需要输入密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh user@remote_host</span><br></pre></td></tr></table></figure><p>如果一切配置正确，您将无需输入密码即可登录。</p><h2 id="5-配置-SSH-客户端（可选）"><a href="#5-配置-SSH-客户端（可选）" class="headerlink" title="5. 配置 SSH 客户端（可选）"></a>5. 配置 SSH 客户端（可选）</h2><h3 id="5-1-编辑-SSH-配置文件"><a href="#5-1-编辑-SSH-配置文件" class="headerlink" title="5.1 编辑 SSH 配置文件"></a>5.1 编辑 SSH 配置文件</h3><p>在本地机器上编辑或创建 <code>~/.ssh/config</code> 文件，配置多个 SSH 登录选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.ssh/config</span><br></pre></td></tr></table></figure><p>添加以下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host remote_host_alias</span><br><span class="line">  HostName remote_host</span><br><span class="line">  User user</span><br><span class="line">  IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p>这样，您可以使用别名 <code>remote_host_alias</code> 登录，而不需要每次输入用户名和主机地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh remote_host_alias</span><br></pre></td></tr></table></figure><h2 id="6-注意事项"><a href="#6-注意事项" class="headerlink" title="6. 注意事项"></a>6. 注意事项</h2><h3 id="6-1-私钥安全"><a href="#6-1-私钥安全" class="headerlink" title="6.1 私钥安全"></a>6.1 私钥安全</h3><p>确保私钥文件（如 <code>id_rsa</code>）权限设置为 <code>600</code>，并妥善保管私钥，避免泄露。</p><h3 id="6-2-公钥分发"><a href="#6-2-公钥分发" class="headerlink" title="6.2 公钥分发"></a>6.2 公钥分发</h3><p>可以在多个服务器之间共享公钥，但每台服务器的 <code>~/.ssh/authorized_keys</code> 文件中应包含相应的公钥。</p><h3 id="6-3-密钥管理"><a href="#6-3-密钥管理" class="headerlink" title="6.3 密钥管理"></a>6.3 密钥管理</h3><p>若使用多个密钥进行 SSH 登录，可以在 <code>~/.ssh/config</code> 文件中为不同的主机指定不同的 <code>IdentityFile</code>。</p><h2 id="7-参考文献"><a href="#7-参考文献" class="headerlink" title="7. 参考文献"></a>7. 参考文献</h2><ul><li><a href="https://www.openssh.com/manual.html">https://www.openssh.com/manual.html</a></li><li><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-2">https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-2</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://huppe.github.io/categories/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/">安全研究</category>
      
      
      <category domain="https://huppe.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/">网络安全</category>
      
      <category domain="https://huppe.github.io/tags/SSH/">SSH</category>
      
      <category domain="https://huppe.github.io/tags/%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/">免密登录</category>
      
      
      <comments>https://huppe.github.io/2025/04/20/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Pikachu 靶场暴力破解</title>
      <link>https://huppe.github.io/2025/03/01/pikachu%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3writeup/</link>
      <guid>https://huppe.github.io/2025/03/01/pikachu%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3writeup/</guid>
      <pubDate>Sat, 01 Mar 2025 15:09:54 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Pikachu靶场笔记&quot;&gt;&lt;a href=&quot;#Pikachu靶场笔记&quot; class=&quot;headerlink&quot; title=&quot;Pikachu靶场笔记&quot;&gt;&lt;/a&gt;Pikachu靶场笔记&lt;/h1&gt;&lt;h2 id=&quot;1-暴力破解&quot;&gt;&lt;a href=&quot;#1-暴力破解&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Pikachu靶场笔记"><a href="#Pikachu靶场笔记" class="headerlink" title="Pikachu靶场笔记"></a>Pikachu靶场笔记</h1><h2 id="1-暴力破解"><a href="#1-暴力破解" class="headerlink" title="1. 暴力破解"></a>1. 暴力破解</h2><h3 id="1-1-直接BurpSuite设置两组点位破解"><a href="#1-1-直接BurpSuite设置两组点位破解" class="headerlink" title="1.1 直接BurpSuite设置两组点位破解"></a>1.1 直接BurpSuite设置两组点位破解</h3><h3 id="1-2-有验证码的破解（on-client）"><a href="#1-2-有验证码的破解（on-client）" class="headerlink" title="1.2 有验证码的破解（on client）"></a>1.2 有验证码的破解（on client）</h3><p>我们打开源码，根据提示进入PHP源码，查看到验证码是前端生成且验证的（前端验证码的判断）。</p><h4 id="验证码源码"><a href="#验证码源码" class="headerlink" title="验证码源码"></a>验证码源码</h4><p><img src="/huppe.github.io/./img/1.png" alt="图片1"></p><p><img src="/huppe.github.io/./img/2.png" alt="图片2"></p><p><img src="/huppe.github.io/./img/3.png" alt="图片3"></p><p>此时，我们只需要抓包查看请求，把一些验证码相关的请求改一下。</p><h4 id="请求抓包"><a href="#请求抓包" class="headerlink" title="请求抓包"></a>请求抓包</h4><p><img src="/huppe.github.io/./img/4.png" alt="图片4"></p><p>最后，查看爆破长度，即可成功爆破。</p><h4 id="爆破成功"><a href="#爆破成功" class="headerlink" title="爆破成功"></a>爆破成功</h4><p><img src="/huppe.github.io/./img/5.png" alt="图片5"></p><h3 id="1-3-有验证码的破解（on-server）"><a href="#1-3-有验证码的破解（on-server）" class="headerlink" title="1.3 有验证码的破解（on server）"></a>1.3 有验证码的破解（on server）</h3><p>尝试了待验证码请求爆破，居然成功了。有些服务器后台是不刷新验证码的，所以抓到包后不要放包，这样验证码就一直有效。把包发到攻击模块直接爆破。</p><h4 id="请求包抓取"><a href="#请求包抓取" class="headerlink" title="请求包抓取"></a>请求包抓取</h4><p><img src="/huppe.github.io/./img/6.png" alt="图片6"></p><h2 id="2-Token爆破"><a href="#2-Token爆破" class="headerlink" title="2. Token爆破"></a>2. Token爆破</h2><p>Token的作用简单理解，就是验证服务器给前端发的令牌，来判断请求是否合法。</p><p>我们使用 <strong>Pitchfork</strong> 模式进行爆破密码和Token。</p><h3 id="2-1-四种爆破模式"><a href="#2-1-四种爆破模式" class="headerlink" title="2.1 四种爆破模式"></a>2.1 四种爆破模式</h3><ul><li><strong>Sniper</strong>（狙击手模式）</li><li><strong>Battering ram</strong>（攻城锤模式）</li><li><strong>Pitchfork</strong>（叉子模式）</li><li><strong>Cluster bomb</strong>（集束炸弹模式）</li></ul><h4 id="爆破模式示意图"><a href="#爆破模式示意图" class="headerlink" title="爆破模式示意图"></a>爆破模式示意图</h4><p><img src="/huppe.github.io/./img/7.png" alt="图片7"></p><h3 id="2-2-添加密码和Token的Payload"><a href="#2-2-添加密码和Token的Payload" class="headerlink" title="2.2 添加密码和Token的Payload"></a>2.2 添加密码和Token的Payload</h3><ul><li>添加密码的Payload对应添加密码的爆破字典。</li><li>添加Token的Payload，点击选项里的 <strong>Grep—Extract</strong>，然后点击获取回复，选中Token的值复制，最后点击OK。</li></ul><h4 id="提取Token值"><a href="#提取Token值" class="headerlink" title="提取Token值"></a>提取Token值</h4><p>原理：通过提取返回包中的Token值作为参数进行爆破。</p><p><img src="/huppe.github.io/./img/8.png" alt="图片8"></p><h4 id="Token爆破成功"><a href="#Token爆破成功" class="headerlink" title="Token爆破成功"></a>Token爆破成功</h4><p><img src="/huppe.github.io/./img/9.png" alt="图片9"></p><p>最后，爆破成功。</p><p><img src="/huppe.github.io/./img/10.png" alt="图片10"></p><h2 id="3-参考文献"><a href="#3-参考文献" class="headerlink" title="3. 参考文献"></a>3. 参考文献</h2><ul><li><a href="https://www.modb.pro/db/190929">https://www.modb.pro/db/190929</a></li><li><a href="https://developer.aliyun.com/article/1626287">https://developer.aliyun.com/article/1626287</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://huppe.github.io/categories/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/">安全研究</category>
      
      
      <category domain="https://huppe.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/">网络安全</category>
      
      <category domain="https://huppe.github.io/tags/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/">暴力破解</category>
      
      
      <comments>https://huppe.github.io/2025/03/01/pikachu%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3writeup/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>this is my first blog！</title>
      <link>https://huppe.github.io/2024/11/23/this-is-my-first-blog%EF%BC%81/</link>
      <guid>https://huppe.github.io/2024/11/23/this-is-my-first-blog%EF%BC%81/</guid>
      <pubDate>Sat, 23 Nov 2024 04:25:54 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;基本信息&quot;&gt;&lt;a href=&quot;#基本信息&quot; class=&quot;headerlink&quot; title=&quot;基本信息&quot;&gt;&lt;/a&gt;基本信息&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;姓名&lt;/strong&gt;: 张志航  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;学历背景&lt;/strong</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><ul><li><strong>姓名</strong>: 张志航  </li><li><strong>学历背景</strong>: 网络空间安全（东莞理工学院）</li></ul><h2 id="专业背景与研究领域"><a href="#专业背景与研究领域" class="headerlink" title="专业背景与研究领域"></a>专业背景与研究领域</h2><ul><li><strong>研究方向</strong>:  <ul><li>web转战re+pwm中</li></ul></li><li><strong>学术成果</strong>:  <ul><li>暂时无</li></ul></li></ul><h2 id="技能与专长"><a href="#技能与专长" class="headerlink" title="技能与专长"></a>技能与专长</h2><ul><li><strong>技术技能</strong>:  <ul><li>熟悉C语言、python语言，了解多门语言HTML,c++,css，php等</li><li>会使用网络渗透工具bp，中国蚁剑等</li></ul></li><li><strong>软技能</strong>:  <ul><li>优秀的沟通与组织能力，在团队协作和领导中表现突出。  </li><li>高度的适应能力和快速学习能力。</li></ul></li></ul><h2 id="兴趣与爱好"><a href="#兴趣与爱好" class="headerlink" title="兴趣与爱好"></a>兴趣与爱好</h2><ul><li><strong>球类</strong>:  <ul><li>乒乓球、羽毛球、篮球等</li></ul></li></ul><h2 id="未来展望"><a href="#未来展望" class="headerlink" title="未来展望"></a>未来展望</h2><p>希望在网络空间安全领域继续深造，攻读硕士学位，一起努力吧！</p>]]></content:encoded>
      
      
      <category domain="https://huppe.github.io/categories/%E5%85%B3%E4%BA%8E%E6%88%91/">关于我</category>
      
      
      <category domain="https://huppe.github.io/tags/%E4%B8%AA%E4%BA%BA%E4%BB%8B%E7%BB%8D/">个人介绍</category>
      
      
      <comments>https://huppe.github.io/2024/11/23/this-is-my-first-blog%EF%BC%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://huppe.github.io/2024/11/22/hello-world/</link>
      <guid>https://huppe.github.io/2024/11/22/hello-world/</guid>
      <pubDate>Fri, 22 Nov 2024 12:38:59 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content:encoded>
      
      
      
      
      <comments>https://huppe.github.io/2024/11/22/hello-world/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
